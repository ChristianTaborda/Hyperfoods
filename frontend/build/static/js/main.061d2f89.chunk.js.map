{"version":3,"sources":["assets/img/logo.png","../node_modules/typescript/lib sync","redux/Login/reducer.js","redux/constants.js","redux/Template/reducer.js","redux/store.js","serviceWorker.js","views/ListWorkers.js","views/CreateWorker.js","views/ListClients.js","views/CreateClient.js","views/CreateTenat.js","routes.js","redux/Template/actions.js","components/AdminNavbar.js","components/Footer.js","components/Sidebar.js","components/FixedPlugin.js","layouts/Admin.js","layouts/Login.js","redux/Login/actions.js","layouts/LandingPage.js","layouts/Suscription.js","index.js","assets/img/simple-logo.png","assets/img/anime3.png"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","initialState","credentials","loginReducer","state","action","type","Object","assign","payload","templateProps","sidebarOpened","bgColor","mode","logo","outterLink","text","imgSrc","templateReducer","reducers","combineReducers","debugMiddleware","compose","window","devToolsExtension","f","store","createStore","Boolean","location","hostname","match","ListWorkers","useState","user_type","user","id_user","is_active","type_document","document","name","surname","phone","address","email","userList","setUserList","useEffect","axios","get","then","res","data","catch","err","console","log","className","Row","Col","md","Card","CardHeader","CardTitle","tag","CardBody","Table","responsive","map","i","key","CreateWorker","notificationAlert","useRef","initialValues","userType","Id","DocumentType","DocumentNumber","Name","LastName","PhoneNumber","Email","Address","password","changepassword","documentType","setDocumentType","setUserType","formSchema","Yup","shape","trim","required","min","matches","when","is","val","length","oneOf","notify","place","message","current","icon","autoDismiss","ref","validationSchema","onSubmit","values","resetForm","parseInt","post","status","setTimeout","FormGroup","htmlFor","Input","onChange","target","value","placeholder","component","CardFooter","Button","color","ListClients","credit_card","clientList","setClientList","client","CreateClient","CreditCard","CreateTenant","routes","path","layout","isSend","setSend","schema_name","paid_until","domain","mensaje","on_trial","tenant","JSON","stringify","table","Container","UncontrolledAlert","mostrarAlerta","setSidebarOpened","connect","dispatch","props","collapseOpen","setCollapseOpen","modalSearch","setModalSearch","setColor","addEventListener","updateColor","removeEventListener","innerWidth","toggleModalSearch","Navbar","classNames","expand","fluid","toggled","onClick","documentElement","classList","toggle","NavbarBrand","href","preventDefault","filter","route","history","pathname","aria-expanded","aria-label","data-target","data-toggle","Collapse","navbar","isOpen","Nav","InputGroup","UncontrolledDropdown","nav","DropdownToggle","caret","DropdownMenu","right","NavLink","DropdownItem","alt","src","require","divider","Modal","modalClassName","data-dismiss","Footer","ps","Date","getFullYear","sidebar","navigator","platform","indexOf","PerfectScrollbar","suppressScrollX","suppressScrollY","destroy","toggleSidebar","logoImg","logoText","undefined","to","innerLink","prop","redirect","routeName","pro","activeClassName","setBgColor","classes","setClasses","activateMode","body","add","remove","data-color","backgroundColor","setBackgroundColor","mainPanel","useHistory","tables","querySelectorAll","scrollTop","scrollingElement","Sidebar","AdminNavbar","from","firebase","initializeApp","apiKey","authDomain","setCredentials","isSignedIn","setIsSignedIn","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","TwitterAuthProvider","callbacks","signInSuccessWithAuthResult","onAuthStateChanged","currentUser","displayName","emailVerified","providerData","signOut","push","firebaseAuth","LandingPage","setIsOpen","data-spy","data-offset","NavbarToggler","NavItem","class","viewBox","preserveAspectRatio","d","data-annual","data-monthly","CardSubtitle","width","avatar","CardText","Suscription","Company","City","params","Plan","createBrowserHistory","ReactDOM","render","exact","Login","Admin","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.061d2f89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.168b729f.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 227;","import { SET_CREDENTIALS } from \"../constants\";\n\nconst initialState = {\n  credentials: {},\n};\n\nfunction loginReducer(state = initialState, action) {\n  if (action.type === SET_CREDENTIALS) {\n    return Object.assign({}, state, {\n      credentials: action.payload,\n    });\n  }\n  return state;\n}\n\nexport default loginReducer;\n","export const SET_CREDENTIALS = \"SET_CREDENTIALS\";\nexport const SET_SIDEBAR_OPENED = \"SET_SIDEBAR_OPENED\";\nexport const SET_BGCOLOR = \"SET_BGCOLOR\";","import { SET_SIDEBAR_OPENED, SET_BGCOLOR } from \"../constants.js\";\nimport logo from \"../../assets/img/simple-logo.png\";\n\nconst initialState = {\n  templateProps: {\n    sidebarOpened: true,\n    bgColor: \"blue\", //[\"primary\", \"blue\", \"green\"]\n    mode: \"light\", // [\"light\", \"dark\"]\n    logo: {\n      outterLink: \"https://github.com/esneidermanzano/hyperfoods\",\n      text: \"HyperFoods\",\n      imgSrc: logo,\n    },\n  },\n};\n\nfunction templateReducer(state = initialState, action) {\n  // setSidebarOpened\n  if (action.type === SET_SIDEBAR_OPENED) {\n    return Object.assign(\n      {},\n      {\n        templateProps: {\n          ...state.templateProps,\n          sidebarOpened: action.payload,\n        },\n      }\n    );\n  }\n\n  // setBgColor\n  if (action.type === SET_BGCOLOR) {\n    return Object.assign(\n      {},\n      {\n        templateProps: {\n          ...state.templateProps,\n          bgColor: action.payload,\n        },\n      }\n    );\n  }\n\n  return state;\n}\n\nexport default templateReducer;\n","import { createStore, combineReducers, compose } from \"redux\";\nimport loginReducer from \"./Login/reducer.js\";\nimport templateReducer from \"./Template/reducer.js\";\n\nconst reducers = combineReducers({\n  loginReducer,\n  templateReducer,\n});\n\nconst debugMiddleware = compose(\n  window.devToolsExtension ? window.devToolsExtension() : (f) => f\n);\n\nconst store = createStore(reducers, debugMiddleware);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // console.log(\n          //   \"This web app is being served cache-first by a service \" +\n          //     \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          // );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // Getting the resources urls for Pre-caching the page\n      const data = {\n        type: \"CACHE_URLS\",\n        payload: [\n          window.location.href,\n          ...performance.getEntriesByType(\"resource\").map((r) => r.name),\n        ],\n      };\n\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing.postMessage(data);\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // console.log(\n              //   \"New content is available and will be used when all \" +\n              //   \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              //   );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction ListWorkers() {\n  const [userList, setUserList] = useState([\n    {\n      user_type: \"-\",\n      user: {\n        id_user: \"-\",\n        is_active: \"-\",\n        type_document: \"-\",\n        document: \"-\",\n        name: \"-\",\n        surname: \"-\",\n        phone: \"-\",\n        address: \"-\",\n        email: \"-\",\n      },\n    },\n  ]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://tenant1.hyperfoods.team/api/users/worker/\")\n      .then((res) => setUserList(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Workers</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Status</th>\n                      <th>User Type</th>\n                      <th>Document</th>\n                      <th>Id Type</th>\n                      <th>Id Number</th>\n                      <th>Name</th>\n                      <th>Last Name</th>\n                      <th>Phone Number</th>\n                      <th>Address</th>\n                      <th>Email</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userList.map((user, i) => {\n                      return (\n                        <tr key={i}>\n                          <td>\n                            {user.user.is_active === \"-\"\n                              ? \"-\"\n                              : user.user.is_active\n                              ? \"true\"\n                              : \"false\"}\n                          </td>\n                          <td>\n                            {user.user.is_active === \"-\"\n                              ? \"-\"\n                              : user.user_type === 1\n                              ? \"Manager\"\n                              : \"Digitalizer\"}\n                          </td>\n                          <td>{user.user.document}</td>\n                          <td>\n                            {user.user.is_active === \"-\"\n                              ? \"-\"\n                              : user.user.type_document === 1\n                              ? \"CC\"\n                              : \"TI\"}\n                          </td>\n                          <td>{user.user.id_user}</td>\n                          <td>{user.user.name}</td>\n                          <td>{user.user.surname}</td>\n                          <td>{user.user.phone}</td>\n                          <td>{user.user.address}</td>\n                          <td>{user.user.email}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default ListWorkers;\n","import React, { useState, useRef } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport NotificationAlert from \"react-notification-alert\";\nimport axios from \"axios\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  FormGroup,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction CreateWorker() {\n  const notificationAlert = useRef();\n  const initialValues = {\n    // userType: \"3\",\n    // Id: \"4\",\n    // DocumentType: \"1\",\n    // DocumentNumber: \"777653910\",\n    // Name: \"Cristian\",\n    // LastName: \"Vallecilla\",\n    // PhoneNumber: \"6234231507\",\n    // Email: \"c.vallecilla@email.com\",\n    // Address: \"6510 Bay Street\",\n    // password: \"1234\",\n    // changepassword: \"1234\",\n\n    userType: \"\",\n    Id: \"\",\n    DocumentType: \"\",\n    DocumentNumber: \"\",\n    Name: \"\",\n    LastName: \"\",\n    PhoneNumber: \"\",\n    Email: \"\",\n    Address: \"\",\n    password: \"\",\n    changepassword: \"\",\n  };\n  const [documentType, setDocumentType] = useState(\"CC\");\n  const [userType, setUserType] = useState(\"manager\");\n\n  const onSubmit = (values, { resetForm }) => {\n    let user = values;\n\n    let payload = {\n      user_type: userType === \"manager\" ? 1 : 2,\n      user: {\n        id_user: parseInt(user.Id),\n        is_active: true,\n        type_document: documentType === \"CC\" ? 1 : 2,\n        document: user.DocumentNumber,\n        name: user.Name,\n        surname: user.LastName,\n        phone: user.PhoneNumber,\n        address: user.Address,\n        email: user.Email,\n        password: user.password,\n      },\n    };\n\n    console.log(payload);\n    axios\n      .post(\"http://tenant1.hyperfoods.team/api/users/worker/create/\", payload)\n      .then((res) => {\n        if (res.status === 201) {\n          notify(\"br\", \"success\", \"User Created Successfully\");\n          setTimeout(() => {\n            resetForm(initialValues);\n          }, 600);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        notify(\"br\", \"danger\", \"Error establishing a database connection\");\n      });\n  };\n\n  //Schema for input data valiation using Yup\n  const formSchema = Yup.object().shape({\n    Id: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(1, \"Minimum of 1 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    DocumentNumber: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    Name: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n    LastName: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n    PhoneNumber: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    Email: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .matches(\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        \"Must be a valid e-mail address\"\n      ),\n    Address: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(\n        /[\\w\\[\\]`#\\^(),.'-]/g,\n        \"Must contain only letters, numbers and these symbols #  ^ ( ) , . ' -\"\n      ),\n    password: Yup.string()\n      .required(\"This field is required\")\n      .min(4, \"Minimum of 4 characters\"),\n    changepassword: Yup.string()\n      .required(\"This field is required\")\n      .min(4, \"Minimum of 4 characters\")\n      .when(\"password\", {\n        is: (val) => (val && val.length > 0 ? true : false),\n        then: Yup.string().oneOf(\n          [Yup.ref(\"password\")],\n          \"Both password need to be the same\"\n        ),\n      }),\n  });\n\n  //Function for notification settings\n  const notify = (place, type, message) => {\n    notificationAlert.current.notificationAlert({\n      place: place,\n      type: type, //[\"primary\", \"success\", \"danger\", \"warning\", \"info\"]\n      message: <b>{message}</b>,\n      icon:\n        type === \"success\"\n          ? \"tim-icons icon-check-2\"\n          : \"tim-icons icon-alert-circle-exc\",\n      autoDismiss: 7,\n    });\n  };\n\n  return (\n    <>\n      <div className=\"content\">\n        <div className=\"react-notification-alert-container\">\n          <NotificationAlert ref={notificationAlert} />\n        </div>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={formSchema}\n          onSubmit={(values, { resetForm }) => onSubmit(values, { resetForm })}\n        >\n          <Form>\n            <Card>\n              <CardHeader>\n                <h5 className=\"title\">Create Worker</h5>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"2\">\n                    <FormGroup>\n                      <label htmlFor=\"UserType\">User type</label>\n                      <Input\n                        type=\"select\"\n                        name=\"UserType\"\n                        onChange={(e) => setUserType(e.target.value)}\n                      >\n                        <option>Manager</option>\n                        <option>Digitalizer</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"px-md-1\" md=\"3\">\n                    <FormGroup>\n                      <label htmlFor=\"Id\">Id</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"Id\"\n                        placeholder=\"type your id\"\n                      />\n                      <ErrorMessage\n                        name=\"Id\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"px-md-1\" md=\"2\">\n                    <FormGroup>\n                      <label htmlFor=\"DocumentType\">Document Type</label>\n                      <Input\n                        type=\"select\"\n                        name=\"DocumentType\"\n                        onChange={(e) => setDocumentType(e.target.value)}\n                      >\n                        <option>CC</option>\n                        <option>TI</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"5\">\n                    <FormGroup>\n                      <label htmlFor=\"documentNumber\">Document Number</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"DocumentNumber\"\n                        placeholder=\"type your id\"\n                      />\n                      <ErrorMessage\n                        name=\"DocumentNumber\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"Name\">Name</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"Name\"\n                        placeholder=\"type your name\"\n                      />\n                      <ErrorMessage\n                        name=\"Name\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"LastName\">Last Name</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"LastName\"\n                        placeholder=\"type your lastname\"\n                      />\n                      <ErrorMessage\n                        name=\"LastName\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"PhoneNumber\">Phone Number</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"PhoneNumber\"\n                        placeholder=\"type your phone number\"\n                      />\n                      <ErrorMessage\n                        name=\"PhoneNumber\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"Email\">Email address</label>\n\n                      <Field\n                        className=\"form-control\"\n                        name=\"Email\"\n                        placeholder=\"type your email address\"\n                      />\n                      <ErrorMessage\n                        name=\"Email\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md=\"12\">\n                    <FormGroup>\n                      <label htmlFor=\"Email\">Address</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"Address\"\n                        placeholder=\"type your address\"\n                      />\n                      <ErrorMessage\n                        name=\"Address\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <br />\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"PhoneNumber\">Password</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"password\"\n                        placeholder=\"type your password\"\n                        type=\"password\"\n                      />\n                      <ErrorMessage\n                        name=\"password\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"changepassword\">\n                        Password Confirmation\n                      </label>\n\n                      <Field\n                        className=\"form-control\"\n                        name=\"changepassword\"\n                        placeholder=\"type your password again\"\n                        type=\"password\"\n                      />\n                      <ErrorMessage\n                        name=\"changepassword\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <Button\n                  type=\"submit\"\n                  className=\"btn-fill\"\n                  color=\"success\"\n                  onSubmit={() => {}}\n                >\n                  Save\n                </Button>\n              </CardFooter>\n            </Card>\n          </Form>\n        </Formik>\n      </div>\n    </>\n  );\n}\n\nexport default CreateWorker;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction ListClients() {\n  const [clientList, setClientList] = useState([\n    {\n      credit_card: \"-\",\n      id_user: \"-\",\n      user: {\n        is_active: \"-\",\n        type_document: \"-\",\n        document: \"-\",\n        name: \"-\",\n        surname: \"-\",\n        phone: \"-\",\n        address: \"-\",\n        email: \"-\",\n      },\n    },\n  ]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://tenant1.hyperfoods.team/api/users/client/\")\n      .then((res) => setClientList(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">List Clients</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Status</th>\n                      <th>Document</th>\n                      <th>Id Type</th>\n                      <th>Id User</th>\n                      <th>Name</th>\n                      <th>Last Name</th>\n                      <th>Phone Number</th>\n                      <th>Address</th>\n                      <th>Email</th>\n                      <th>Credit Card</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {clientList.map((client, i) => {                      \n                      return (\n                        <tr key={i}>\n                          <td>\n                            {client.user.is_active === \"-\"\n                              ? \"-\"\n                              : client.user.is_active\n                              ? \"true\"\n                              : \"false\"}\n                          </td>\n                          <td>{client.user.document}</td>\n                          <td>\n                            {client.user.is_active === \"-\"\n                              ? \"-\"\n                              : client.user.type_document === 1\n                              ? \"CC\"\n                              : \"TI\"}\n                          </td>\n                          <td>{client.id_user}</td>\n                          <td>{client.user.name}</td>\n                          <td>{client.user.surname}</td>\n                          <td>{client.user.phone}</td>\n                          <td>{client.user.address}</td>\n                          <td>{client.user.email}</td>\n                          <td>{client.credit_card}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default ListClients;\n","import React, { useState, useRef } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport NotificationAlert from \"react-notification-alert\";\nimport axios from \"axios\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  FormGroup,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction CreateClient() {\n  const notificationAlert = useRef();\n  const initialValues = {\n    // Id: \"2\",\n    // DocumentType: \"1\",\n    // DocumentNumber: \"577653910\",\n    // Name: \"Alexandra\",\n    // LastName: \"Usma\",\n    // PhoneNumber: \"5234201007\",\n    // Email: \"a.usma@gmail.com\",\n    // CreditCard: \"908883883\",\n    // Address: \"4460 Green Street\",\n    // password: \"1234\",\n    // changepassword: \"1234\",\n\n    Id: \"\",\n    DocumentType: \"\",\n    DocumentNumber: \"\",\n    Name: \"\",\n    LastName: \"\",\n    PhoneNumber: \"\",\n    Email: \"\",\n    CreditCard: \"\",\n    Address: \"\",\n    password: \"\",\n    changepassword: \"\",\n  };\n  const [documentType, setDocumentType] = useState(\"CC\");\n\n  const onSubmit = (values, { resetForm }) => {\n    let user = values;\n\n    let payload = {\n      credit_card: user.CreditCard,\n      user: {\n        id_user: parseInt(user.Id),\n        is_active: true,\n        type_document: documentType === \"CC\" ? 1 : 2,\n        document: user.DocumentNumber,\n        name: user.Name,\n        surname: user.LastName,\n        phone: user.PhoneNumber,\n        email: user.Email,\n        address: user.Address,\n        password: user.password,\n      },\n    };\n\n    console.log(payload);\n    axios\n      .post(\"http://tenant1.hyperfoods.team/api/users/client/create/\", payload)\n      .then((res) => {\n        if (res.status === 201) {\n          notify(\"br\", \"success\", \"User Created Successfully\");\n          setTimeout(() => {\n            resetForm(initialValues);\n          }, 600);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        notify(\"br\", \"danger\", \"Error establishing a database connection\");\n      });\n  };\n\n  //Schema for input data valiation using Yup\n  const formSchema = Yup.object().shape({\n    Id: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(1, \"Minimum of 1 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    DocumentNumber: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    Name: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n    LastName: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n    PhoneNumber: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    Email: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .matches(\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        \"Must be a valid e-mail address\"\n      ),\n    CreditCard: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    Address: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(\n        /[\\w\\[\\]`#\\^(),.'-]/g,\n        \"Must contain only letters, numbers and these symbols #  ^ ( ) , . ' -\"\n      ),\n    password: Yup.string()\n      .required(\"This field is required\")\n      .min(4, \"Minimum of 4 characters\"),\n    changepassword: Yup.string()\n      .required(\"This field is required\")\n      .min(4, \"Minimum of 4 characters\")\n      .when(\"password\", {\n        is: (val) => (val && val.length > 0 ? true : false),\n        then: Yup.string().oneOf(\n          [Yup.ref(\"password\")],\n          \"Both password need to be the same\"\n        ),\n      }),\n  });\n\n  //Function for notification settings\n  const notify = (place, type, message) => {\n    notificationAlert.current.notificationAlert({\n      place: place,\n      type: type, //[\"primary\", \"success\", \"danger\", \"warning\", \"info\"]\n      message: <b>{message}</b>,\n      icon:\n        type === \"success\"\n          ? \"tim-icons icon-check-2\"\n          : \"tim-icons icon-alert-circle-exc\",\n      autoDismiss: 7,\n    });\n  };\n\n  return (\n    <>\n      <div className=\"content\">\n        <div className=\"react-notification-alert-container\">\n          <NotificationAlert ref={notificationAlert} />\n        </div>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={formSchema}\n          onSubmit={(values, { resetForm }) => onSubmit(values, { resetForm })}\n        >\n          <Form>\n            <Card>\n              <CardHeader>\n                <h5 className=\"title\">Create Client</h5>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"5\">\n                    <FormGroup>\n                      <label htmlFor=\"Id\">Id</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"Id\"\n                        placeholder=\"type your id\"\n                      />\n                      <ErrorMessage\n                        name=\"Id\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"px-md-1\" md=\"2\">\n                    <FormGroup>\n                      <label htmlFor=\"DocumentType\">Document Type</label>\n                      <Input\n                        type=\"select\"\n                        name=\"DocumentType\"\n                        onChange={(e) => setDocumentType(e.target.value)}\n                      >\n                        <option>CC</option>\n                        <option>TI</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"5\">\n                    <FormGroup>\n                      <label htmlFor=\"documentNumber\">Document Number</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"DocumentNumber\"\n                        placeholder=\"type your id\"\n                      />\n                      <ErrorMessage\n                        name=\"DocumentNumber\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"Name\">Name</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"Name\"\n                        placeholder=\"type your name\"\n                      />\n                      <ErrorMessage\n                        name=\"Name\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"LastName\">Last Name</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"LastName\"\n                        placeholder=\"type your lastname\"\n                      />\n                      <ErrorMessage\n                        name=\"LastName\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"PhoneNumber\">Phone Number</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"PhoneNumber\"\n                        placeholder=\"type your phone number\"\n                      />\n                      <ErrorMessage\n                        name=\"PhoneNumber\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"Email\">Email address</label>\n\n                      <Field\n                        className=\"form-control\"\n                        name=\"Email\"\n                        placeholder=\"type your email address\"\n                      />\n                      <ErrorMessage\n                        name=\"Email\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"CreditCard\">Credit Card Number</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"CreditCard\"\n                        placeholder=\"type your credit card number\"\n                      />\n                      <ErrorMessage\n                        name=\"CreditCard\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"Email\">Address</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"Address\"\n                        placeholder=\"type your address\"\n                      />\n                      <ErrorMessage\n                        name=\"Address\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <br />\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"PhoneNumber\">Password</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"password\"\n                        placeholder=\"type your password\"\n                        type=\"password\"\n                      />\n                      <ErrorMessage\n                        name=\"password\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"changepassword\">\n                        Password Confirmation\n                      </label>\n\n                      <Field\n                        className=\"form-control\"\n                        name=\"changepassword\"\n                        placeholder=\"type your password again\"\n                        type=\"password\"\n                      />\n                      <ErrorMessage\n                        name=\"changepassword\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <Button\n                  type=\"submit\"\n                  className=\"btn-fill\"\n                  color=\"success\"\n                  onSubmit={() => {}}\n                >\n                  Save\n                </Button>\n              </CardFooter>\n            </Card>\n          </Form>\n        </Formik>\n      </div>\n    </>\n  );\n}\n\nexport default CreateClient;\n","import React , { useState }from 'react'\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport axios from \"axios\";\nimport {\n    Card,Row,Col,  CardBody,\n    CardFooter, FormGroup,  Button,UncontrolledAlert,Alert,Container\n  } from 'reactstrap';\n  import \"../layouts/Suscription.css\"\nimport { isReturnStatement } from 'typescript';\n\n  function CreateTenant(){\n\n    const [isSend, setSend]= useState(false)\n    /*\n    const [schema_name, setNTenant] = useState(\"\");\n    const [name, setNEmpresa] = useState(\"\")\n    const [paid_until, setpaid_until]= useState(\"\")*/\n\n    const [initialValues, setInitialValues] = useState({\n      schema_name: \"\",\n      name: \"\",\n      paid_until:\"\"\n    });\n    /*const onClick = (e) => {\n        e.preventDefault();\n\n       \n        const mensaje ={\n          schema_name: schema_name,\n          name: name,\n          paid_until: paid_until,\n       \n        } \n        console.log(JSON.stringify(mensaje));\n        setSend(true)\n        cleanForm()\n      \n        //history.push(\"/\");\n    \n      };*/\n      const onSubmit = (values, { resetForm }) => {\n        const domain= values['schema_name'] +\".hyperfoods.team\" \n        const mensaje={\n          \"is_primary\": true,\n        }\n        values.on_trial= true\n        mensaje.domain= domain\n        mensaje.tenant= values\n        \n        console.log(JSON.stringify(mensaje));\n        setSend(true)\n        setTimeout(() => {\n          resetForm(initialValues);\n        }, 600);\n        axios\n        .post(\"http://hyperfoods.team/tenants/create/\",mensaje)\n        .then((res) => {\n          console.log(\"%c response \", \"background: #222; color: #bada55\");\n          console.table(res.data);\n        })\n       .catch((err) => console.log(err)) \n      \n      \n      }\n\n\n      const formSchema = Yup.object().shape({\n   \n          schema_name: Yup.string()\n            .trim()\n            .required(\"Required field\")\n            .min(2, \"Minimum of 2 characters\")\n            .matches(\n              /^([a-z,.'-])+/g,\n              \"Must contain only lowercase letters and these symbols , . '   - \"\n            ),\n          name: Yup.string()\n            .trim()\n            .required(\"Required field\")\n            .min(2, \"Minimum of 2 characters\")\n            .matches(\n              /^[a-z ,.'-]+$/i,\n              \"Must contain only letters and these symbols , . '   - \"\n            ),\n          paid_until: Yup.string()\n            .trim()\n            .required(\"Required field\")        \n      });\n    \n    const mostrarAlerta = () => {\n        if (isSend) {\n            return (\n              <UncontrolledAlert color=\"success\">\n              <span>\n                <b>Successfully created</b>\n              </span>\n            </UncontrolledAlert>\n            )\n        }\n        \n    }\n    return(\n        <>\n        <div className=\"content\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={formSchema}\n          onSubmit={(values, { resetForm }) => onSubmit(values, { resetForm })}\n        > \n           <Form  >  \n        <Card >\n           <h3 className=\"title pl-md-4 py-2\">Create Tenant</h3>\n          <CardBody >\n          <Container className=\"d-flex justify-content-center align-items-center\">\n             <Col >\n             <FormGroup>\n               <label>Tenant name</label>\n               <Field\n               className=\"form-control\"\n                 placeholder=\"Type the tenant name\"\n                 type=\"text\"\n                 name=\"schema_name\"\n                />\n                <ErrorMessage\n                        name=\"schema_name\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n               </FormGroup>\n             </Col>\n             <Col >\n             <FormGroup>\n              <label> Company name\n              </label>\n              <Field \n              className=\"form-control\"\n                 placeholder=\"Type the company name\" \n                 type=\"text\"\n                 name=\"name\" />\n                 <ErrorMessage\n                        name=\"name\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                </FormGroup>\n             </Col>\n             <Col >\n             <FormGroup>\n              <label>Expiration</label>\n                <Field\n                className=\"form-control\"\n                  placeholder=\"fecha limite\"\n                  type=\"date\"\n                  name=\"paid_until\"\n                />\n                 <ErrorMessage\n                        name=\"paid_until\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                </FormGroup>\n             </Col>\n              <CardFooter className=\"text-center\">\n                 <Button \n                   className=\"btn-fill\" \n                   color=\"primary\" \n                   color=\"success\" \n                   type=\"submit\"\n                 >\n                 Create\n                 </Button>\n              </CardFooter>\n        \n          </Container>   \n        </CardBody>\n           \n     </Card>\n     </Form>\n     </Formik>\n      {mostrarAlerta()}\n      </div>\n      </>\n    );\n\n  }\n\n  export default CreateTenant;","/* eslint-disable */\n// Added views\nimport ListWorkers from \"views/ListWorkers.js\"\nimport CreateWorker from \"views/CreateWorker.js\"\nimport ListClients from \"views/ListClients.js\"\nimport CreateClient from \"views/CreateClient.js\"\n\n// Template views\n// import Dashboard from \"views/Dashboard.js\";\n// import Icons from \"views/Icons.js\";\n// import Map from \"views/Map.js\";\n// import Notifications from \"views/Notifications.js\";\n// import TableList from \"views/TableList.js\";\n// import Typography from \"views/Typography.js\";\n// import UserProfile from \"views/UserProfile.js\";\nimport CreateTenant from \"views/CreateTenat.js\"\n\n\nvar routes = [  \n  {\n    path: \"/list-workers\",\n    name: \"List Workers\",\n    icon: \"tim-icons icon-badge\",\n    component: ListWorkers,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/create-worker\",\n    name: \"Create Worker\",\n    icon: \"tim-icons icon-single-copy-04\",\n    component: CreateWorker,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/list-clients\",\n    name: \"List Clients\",\n    icon: \"tim-icons icon-bullet-list-67\",\n    component: ListClients,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/create-client\",\n    name: \"Create Client\",\n    icon: \"tim-icons icon-single-02\",\n    component: CreateClient,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/create-tenant\",\n    name: \"Create Tenant\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: CreateTenant,\n    layout: \"/admin\"\n  },\n\n\n  // Template views\n  // {\n  //   path: \"/dashboard\",\n  //   name: \"Dashboard\",\n  //   icon: \"tim-icons icon-chart-pie-36\",\n  //   component: Dashboard,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",    \n  //   icon: \"tim-icons icon-atom\",\n  //   component: Icons,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/map\",\n  //   name: \"Map\",    \n  //   icon: \"tim-icons icon-pin\",\n  //   component: Map,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/notifications\",\n  //   name: \"Notifications\",    \n  //   icon: \"tim-icons icon-bell-55\",\n  //   component: Notifications,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/user-profile\",\n  //   name: \"User Profile\",\n  //   icon: \"tim-icons icon-single-02\",\n  //   component: UserProfile,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/tables\",\n  //   name: \"Table List\",    \n  //   icon: \"tim-icons icon-puzzle-10\",\n  //   component: TableList,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",    \n  //   icon: \"tim-icons icon-align-center\",\n  //   component: Typography,\n  //   layout: \"/admin\"\n  // },  \n];\n\nexport default routes;\n","import { SET_SIDEBAR_OPENED, SET_BGCOLOR } from \"../constants.js\";\n\nexport function setSidebarOpened(payload) {\n  return { type: SET_SIDEBAR_OPENED, payload };\n}\n\nexport function setBgColor(payload) {\n  return { type: SET_BGCOLOR, payload };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport routes from \"routes.js\";\nimport { setSidebarOpened } from \"../redux/Template/actions.js\";\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n} from \"reactstrap\";\n\nfunction AdminNavbar(props) {\n  const [collapseOpen, setCollapseOpen] = useState(false);\n  const [modalSearch, setModalSearch] = useState(false);\n  const [color, setColor] = useState(\"navbar-transparent\");\n\n  useEffect(\n    () => {\n      //component mounted (ComponentDidMount)\n      window.addEventListener(\"resize\", updateColor);\n\n      // callback at unmount (ComponentWillUnmount)\n      return () => {\n        window.removeEventListener(\"resize\", updateColor);\n      };\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setColor(\"bg-white\");\n    } else {\n      setColor(\"navbar-transparent\");\n    }\n  };\n\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (collapseOpen) {\n      setColor(\"navbar-transparent\");\n    } else {\n      setColor(\"bg-white\");\n    }\n    setCollapseOpen(!collapseOpen);\n  };\n\n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setModalSearch(!modalSearch);\n  };\n\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    props.setSidebarOpened(!props.sidebarOpened);\n  };\n\n  const getBrandText = () => {\n    return routes.filter(\n      (route) => route.layout + route.path === props.history.location.pathname\n    )[0].name;\n    // console.log(routes.map(route=>route.layout + route.path))\n    // console.log(props.history.location.pathname)\n    // return \"Brand\";\n  };\n\n  return (\n    <>\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <button\n                className=\"navbar-toggler\"\n                type=\"button\"\n                onClick={toggleSidebar}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              {getBrandText()}\n            </NavbarBrand>\n          </div>\n          <button\n            aria-expanded={false}\n            aria-label=\"Toggle navigation\"\n            className=\"navbar-toggler\"\n            data-target=\"#navigation\"\n            data-toggle=\"collapse\"\n            id=\"navigation\"\n            type=\"button\"\n            onClick={toggleCollapse}\n          >\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </button>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <InputGroup className=\"search-bar\">\n                <Button\n                  color=\"link\"\n                  data-target=\"#searchModal\"\n                  data-toggle=\"modal\"\n                  id=\"search-button\"\n                  onClick={toggleModalSearch}\n                >\n                  <i className=\"tim-icons icon-zoom-split\" />\n                  <span className=\"d-lg-none d-md-block\">Search</span>\n                </Button>\n              </InputGroup>\n              <UncontrolledDropdown nav>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  data-toggle=\"dropdown\"\n                  nav\n                >\n                  <div className=\"notification d-none d-lg-block d-xl-block\" />\n                  <i className=\"tim-icons icon-sound-wave\" />\n                  <p className=\"d-lg-none\">Notifications</p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">\n                      Mike John responded to your email\n                    </DropdownItem>\n                  </NavLink>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">\n                      You have 5 more tasks\n                    </DropdownItem>\n                  </NavLink>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">\n                      Your friend Michael is in town\n                    </DropdownItem>\n                  </NavLink>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">\n                      Another notification\n                    </DropdownItem>\n                  </NavLink>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">\n                      Another one\n                    </DropdownItem>\n                  </NavLink>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <UncontrolledDropdown nav>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  data-toggle=\"dropdown\"\n                  nav\n                  onClick={(e) => e.preventDefault()}\n                >\n                  <div className=\"photo\">\n                    <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\n                  </div>\n                  <b className=\"caret d-none d-lg-block d-xl-block\" />\n                  <p className=\"d-lg-none\">Log out</p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                  </NavLink>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                  </NavLink>\n                  <DropdownItem divider tag=\"li\" />\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">Log out</DropdownItem>\n                  </NavLink>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n      <Modal\n        modalClassName=\"modal-search\"\n        isOpen={modalSearch}\n        toggle={toggleModalSearch}\n      >\n        <div className=\"modal-header\">\n          <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={toggleModalSearch}\n          >\n            <i className=\"tim-icons icon-simple-remove\" />\n          </button>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    sidebarOpened: state.templateReducer.templateProps.sidebarOpened,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSidebarOpened: (state) => dispatch(setSidebarOpened(state)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminNavbar);\n","/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container } from \"reactstrap\";\n\nfunction Footer () {\n  return (\n    <footer className=\"footer\">\n      <Container fluid>\n        <div className=\"copyright\">\n          © {new Date().getFullYear()} made with{\" \"}\n          <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\n          <a\n            href=\"https://www.creative-tim.com/?ref=bdr-user-archive-footer\"\n            target=\"_blank\"\n          >\n            Creative Tim\n          </a>{\" \"}\n          for a better web.\n        </div>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","/*eslint-disable*/\nimport React, { useEffect, useRef } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setSidebarOpened } from \"../redux/Template/actions.js\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav } from \"reactstrap\";\nimport routes from \"../routes.js\";\n\nvar ps;\n\nfunction Sidebar(props) {\n  const sidebar = useRef();\n\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n\n  useEffect(\n    () => {\n      // component mounted (ComponentDidMount)\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps = new PerfectScrollbar(sidebar, {\n          suppressScrollX: true,\n          suppressScrollY: false,\n        });\n      }\n      // callback at unmount (ComponentWillUnmount)\n      return () => {\n        if (navigator.platform.indexOf(\"Win\") > -1) {\n          ps.destroy();\n        }\n      };\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  // const linkOnClick = () => { document.documentElement.classList.remove(\"nav-open\") };\n\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    props.setSidebarOpened(!props.sidebarOpened);\n  };\n\n  const { bgColor, logo } = props;\n  let logoImg = null;\n  let logoText = null;\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-mini\"\n          target=\"_blank\"\n          onClick={toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </a>\n      );\n      logoText = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-normal\"\n          target=\"_blank\"\n          onClick={toggleSidebar}\n        >\n          {logo.text}\n        </a>\n      );\n    } else {\n      logoImg = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-mini\"\n          onClick={toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </Link>\n      );\n      logoText = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-normal\"\n          onClick={toggleSidebar}\n        >\n          {logo.text}\n        </Link>\n      );\n    }\n  }\n\n  return (\n    <div className=\"sidebar\" data={bgColor}>\n      <div className=\"sidebar-wrapper\" ref={sidebar}>\n        {logoImg !== null || logoText !== null ? (\n          <div className=\"logo\">\n            {logoImg}\n            {logoText}\n          </div>\n        ) : null}\n        <Nav>\n          {routes.map((prop, key) => {\n            if (prop.redirect) return null;\n            return (\n              <li\n                className={\n                  activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\n                }\n                key={key}\n              >\n                <NavLink\n                  to={prop.layout + prop.path}\n                  className=\"nav-link\"\n                  activeClassName=\"active\"\n                  onClick={toggleSidebar}\n                >\n                  <i className={prop.icon} />\n                  <p>{prop.name}</p>\n                </NavLink>\n              </li>\n            );\n          })}\n        </Nav>\n      </div>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    bgColor: state.templateReducer.templateProps.bgColor,\n    logo: state.templateReducer.templateProps.logo,\n    sidebarOpened: state.templateReducer.templateProps.sidebarOpened,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSidebarOpened: (state) => dispatch(setSidebarOpened(state)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setBgColor } from \"../redux/Template/actions.js\";\n\nfunction FixedPlugin(props) {\n  const [classes, setClasses] = useState(\"dropdown show-dropdown\");\n\n  const handleClick = () => {\n    if (classes === \"dropdown show-dropdown\") {\n      setClasses(\"dropdown show-dropdown show\");\n    } else {\n      setClasses(\"dropdown show-dropdown\");\n    }\n  };\n\n  const activateMode = (mode) => {\n    switch (mode) {\n      case \"light\":\n        document.body.classList.add(\"white-content\");\n        break;\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  };\n\n  // mode by default\n  useEffect(() => {\n    activateMode(props.mode);\n  }, [props.mode]);\n\n\n  return (\n    <div className=\"fixed-plugin\">\n      <div className={classes}>\n        <div onClick={handleClick}>\n          <i className=\"fa fa-cog fa-2x\" />\n        </div>\n        <ul className=\"dropdown-menu show\">\n          <li className=\"header-title\">SIDEBAR BACKGROUND</li>\n          <li className=\"adjustments-line\">\n            <div className=\"badge-colors text-center\">\n              <span\n                className={\n                  props.bgColor === \"primary\"\n                    ? \"badge filter badge-primary active\"\n                    : \"badge filter badge-primary\"\n                }\n                data-color=\"primary\"\n                onClick={() => {\n                  props.setBgColor(\"primary\");\n                }}\n              />{\" \"}\n              <span\n                className={\n                  props.bgColor === \"blue\"\n                    ? \"badge filter badge-info active\"\n                    : \"badge filter badge-info\"\n                }\n                data-color=\"blue\"\n                onClick={() => {\n                  props.setBgColor(\"blue\");\n                }}\n              />{\" \"}\n              <span\n                className={\n                  props.bgColor === \"green\"\n                    ? \"badge filter badge-success active\"\n                    : \"badge filter badge-success\"\n                }\n                data-color=\"green\"\n                onClick={() => {\n                  props.setBgColor(\"green\");\n                }}\n              />{\" \"}\n            </div>\n          </li>\n          <li className=\"adjustments-line text-center color-change\">\n            <span className=\"color-label\">LIGHT MODE</span>{\" \"}\n            <span\n              className=\"badge light-badge mr-2\"\n              onClick={() => activateMode(\"light\")}\n            />{\" \"}\n            <span\n              className=\"badge dark-badge ml-2\"\n              onClick={() => activateMode(\"dark\")}\n            />{\" \"}\n            <span className=\"color-label\">DARK MODE</span>{\" \"}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    bgColor: state.templateReducer.templateProps.bgColor,\n    mode: state.templateReducer.templateProps.mode,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setBgColor: (color) => dispatch(setBgColor(color)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FixedPlugin);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { connect } from \"react-redux\";\nimport routes from \"routes.js\";\nimport { setSidebarOpened } from \"../redux/Template/actions.js\";\n\n// core components\nimport AdminNavbar from \"components/AdminNavbar.js\";\nimport Footer from \"components/Footer.js\";\nimport Sidebar from \"components/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin.js\";\n\nimport \"./Admin.css\";\n\nvar ps;\n\nfunction Admin(props) {\n  const [backgroundColor, setBackgroundColor] = useState(props.bgColor);\n  const mainPanel = useRef();\n  let history = useHistory();\n\n  useEffect(\n    () => {\n      // component mounted (ComponentDidMount)\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        document.documentElement.className += \" perfect-scrollbar-on\";\n        document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n        ps = new PerfectScrollbar(mainPanel, { suppressScrollX: true });\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      props.setSidebarOpened(\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n      );\n\n      // callback at unmount (ComponentWillUnmount)\n      return () => {\n        if (navigator.platform.indexOf(\"Win\") > -1) {\n          ps.destroy();\n          document.documentElement.className += \" perfect-scrollbar-off\";\n          document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n        }\n      };\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  useEffect(() => {\n    // component updated (ComponentDidUpdate)\n    if (history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      mainPanel.current.scrollTop = 0;\n    }\n    setBackgroundColor(props.bgColor);\n  }, [history.action, props.bgColor]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <Route component={Sidebar} />\n        <div className=\"main-panel\" ref={mainPanel} data={backgroundColor}>\n          <Route component={AdminNavbar} />\n\n          <Switch>\n            {getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/dashboard\" />\n          </Switch>\n          <Footer fluid />\n        </div>\n      </div>\n      <FixedPlugin />\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    bgColor: state.templateReducer.templateProps.bgColor,\n    sidebarOpened: state.templateReducer.templateProps.sidebarOpened,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSidebarOpened: (state) => dispatch(setSidebarOpened(state)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, FormGroup } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport NotificationAlert from \"react-notification-alert\";\nimport { setCredentials } from \"../redux/Login/actions.js\";\nimport logo from \"../assets/img/logo.png\";\nimport \"./Login.css\";\nimport firebase from \"firebase\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\n\n// Configure Firebase.\nconst config = {\n  apiKey: \"AIzaSyCwDo3PWtcFx7y4lHac4p4DaRWfVEPc1JI\",\n  authDomain: \"fire-auth-hyperfoods.firebaseapp.com\",\n};\nfirebase.initializeApp(config);\n\nfunction Login(props) {\n  const notificationAlert = useRef();\n  let history = useHistory();\n\n  //Function to handle Login submit\n  const onSubmit = (values, { resetForm }) => {\n    console.log(values);\n    axios\n      .post(\"http://tenant1.hyperfoods.team/api/users/login/\", values)\n      .then((res) => {\n        if (res.status === 200) {\n          if (res.data.user.is_active) {\n            notify(\"br\", \"success\", \"Login successful\");\n            props.setCredentials(res.data);\n            setTimeout(() => {\n              history.push(\"/\");\n            }, 800);\n          } else notify(\"br\", \"danger\", \"Inactive user\");\n        }\n      })\n      .catch(() => {\n        notify(\"br\", \"danger\", \"Incorrect user Id or password\");\n        setTimeout(() => {\n          resetForm({\n            email: \"\",\n            password: \"\",\n          });\n        }, 600);\n      });\n  };\n\n  //Schema for input data valiation using Yup\n  const formSchema = Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .matches(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        \"Must be a valid e-mail address\"\n      ),\n    password: Yup.string()\n      .required(\"Required field\")\n      .min(4, \"Minimum of 4 characters\"),\n  });\n\n  //Function for notification settings\n  const notify = (place, type, message) => {\n    notificationAlert.current.notificationAlert({\n      place: place,\n      type: type, //[\"primary\", \"success\", \"danger\", \"warning\", \"info\"]\n      message: <b>{message}</b>,\n      icon:\n        type === \"success\"\n          ? \"tim-icons icon-check-2\"\n          : \"tim-icons icon-alert-circle-exc\",\n      autoDismiss: 7,\n    });\n  };\n\n  // -- -- Social networks login with Firebase -- -- //\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  // Configure FirebaseUI.\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => false,\n    },\n  };\n\n  useEffect(\n    () => {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (!!user) {                                  \n          console.table({\n            name: firebase.auth().currentUser.displayName,\n            emailVerified: firebase.auth().currentUser.emailVerified,\n            email: firebase.auth().currentUser.providerData[0].email,\n          });\n          firebase.auth().signOut();\n        }\n\n        setIsSignedIn(!!user);\n      });\n    },\n    // eslint-disable-next-line\n    []\n  );\n  // -- -- -- -- -- -- -- -- -- -- -- -- -- --  -- -- //\n\n  if (!isSignedIn) {\n    return (\n      <div className=\"login-background\">\n        <div className=\"react-notification-alert-container\">\n          <NotificationAlert ref={notificationAlert} />\n        </div>\n\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n          validationSchema={formSchema}\n          onSubmit={(values, { resetForm }) => onSubmit(values, { resetForm })}\n        >\n          <Form className=\"login-form shadow p-4 mb-0 rounded\">\n            <div className=\"text-center\">\n              <img className=\"login-logo\" alt=\"logo\" src={logo} />\n            </div>\n            <br />\n\n            <FormGroup>\n              <label htmlFor=\"Id\">Email</label>\n              <Field\n                className=\"form-control\"\n                name=\"email\"\n                placeholder=\"type your email\"\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className=\"field-error text-danger\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <label htmlFor=\"Password\">Password</label>\n              <Field\n                className=\"form-control\"\n                name=\"password\"\n                placeholder=\"type your password\"\n                type=\"password\"\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className=\"field-error text-danger\"\n              />\n            </FormGroup>\n\n            <div className=\"text-center pt-2\">\n              <Button\n                type=\"submit\"\n                className=\"btn btn-dark btn-block\"\n                // onClick={onClickLogin}\n                onSubmit={() => {}}\n              >\n                Log in\n              </Button>\n            </div>\n            <div className=\"text-center pt-2\">\n              Or continue with your social account\n            </div>\n            {!isSignedIn && (\n              <StyledFirebaseAuth\n                uiConfig={uiConfig}\n                firebaseAuth={firebase.auth()}\n              />\n            )}\n            <div className=\"text-center\">\n              <a href=\"/\">Sign up</a>\n              <span className=\"p-2\">|</span>\n              <a href=\"/\">Forgot Password</a>\n            </div>\n          </Form>\n        </Formik>\n      </div>\n    );\n  }\n  return <></>;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCredentials: (credentials) => dispatch(setCredentials(credentials)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import { SET_CREDENTIALS } from \"../constants\";\n\nexport function setCredentials(payload) {\n  return { type: SET_CREDENTIALS, payload };\n}","import React , { useState }from 'react'\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    Nav,\n    NavItem,\n    NavLink, Container\n  } from 'reactstrap';\n  import {\n    Card,Row,Col, CardText, CardBody,\n    CardTitle, CardSubtitle, CardFooter, Table, Button\n  } from 'reactstrap';\n  import { useHistory } from \"react-router-dom\";\n  import Footer from \"components/Footer.js\";\nimport logo from \"assets/img/simple-logo.png\";\nimport avatar from \"assets/img/anime3.png\"\nimport \"./Landing.css\"\n\nfunction LandingPage(){\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n    let history = useHistory();\n    \n\n  \n    return (\n   \n      <body data-spy=\"scroll\" data-target=\"#navbar-l\" data-offset=\"20\">\n         {//Barra de navegación\n         }\n        <section id=\"home\" >\n\n          <Navbar id=\"navbar-l\" className=\"navbar-l navbar-expand-lg navbar-dark \">\n            <Container>\n              <a className=\"navbar-brand-l\" href=\"/\">\n                <img src={logo} alt=\"logo\" />\n              </a>\n              <NavbarToggler onClick={toggle} />\n              <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"ml-auto\" navbar>\n                  <NavItem >\n                    <NavLink href=\"#home\">Home</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"#pricing\">Plans</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"#team\">Team</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"#m-pay\">Pays</NavLink>\n                  </NavItem>    \n                </Nav>        \n              </Collapse>\n            </Container>\n          </Navbar>\n\n          <div  className=\"landing\">\n            <div className=\"home-wrap\">\n              <div className=\"home-inner \">\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"caption text-center\" >\n            <h1>Welcome to Hyperfoods</h1>\n            <h3 class=\" lead px-5\">Foods sales management system\n              </h3>\n            \n          </div>\n          <div className=\"onda\">\n              <svg viewBox=\"0 0 500 150\" preserveAspectRatio=\"none\" className=\"ondaa\">\n                <path d=\"M0.00,49.98 C149.99,150.00 349.20,-49.98 500.00,49.98 L500.00,150.00 L0.00,150.00 Z\" className=\"ondaaa\">\n                </path>\n               </svg>\n          </div>\n        </section>\n        \n\n        <section id=\"pricing\" className=\"pricing offsset py-3 \">\n          <h1 className=\"tex-center\">Our planes</h1>\n          <Container>\n\n             <Row>\n                <Col className=\"col-12 col-lg-4\">\n                 <Card>\n                    <CardBody>\n                      <div className=\"d-flex mb-3 text-primary\">\n                        <span className=\"h5 mb-0\">$</span>\n                        <CardTitle className=\"price display-2 mb-0 price1\" data-annual=\"199\" data-monthly=\"99\">\n                          100</CardTitle>\n                        \n                        <CardSubtitle className=\"h6 font-weight-normal align-self-end\">/month</CardSubtitle>\n                      </div>\n                      <h4 className=\"mb-3 text-black\">Plan Basic</h4>\n                      <CardSubtitle>                          \n                         more basic functionalities and zero level of customization\n                        </CardSubtitle> \n                   </CardBody>\n                 \n                   <CardBody>\n                   <Table  responsive>\n                        <div className=\"features\">\n                          <tbody>\n                            <tr>\n                              <td ><span className=\"check\"><i className=\" far fa-check-circle\"></i></span> User management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Client management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Products management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Sales management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Reports(text)</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> Graphic reports</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> Customization</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> Menu update(Excel)</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> Client location</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> System monitoring</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> PWA</td>\n                            </tr>\n                          </tbody>\n                        </div>\n                      </Table>\n                      <CardFooter className=\"text-center\">\n         \n                         <Button className=\"btn-fill \"  onClick={() => history.push(\"/request/basic\")} color=\"success\" type=\"submit\">\n                          Get <i className=\"p-2 fas fa-arrow-right\"></i>\n                         </Button>\n                     \n                      </CardFooter>\n                   </CardBody>\n                  </Card>\n                </Col>\n                <Col className=\"col-12 col-lg-4\">\n                <Card>\n                    <CardBody>\n                      <div className=\"d-flex mb-3 text-primary\">\n                        <span className=\"h5 mb-0\">$</span>\n                        <CardTitle className=\"price display-2 mb-0 price1\" data-annual=\"199\" data-monthly=\"99\">\n                          150</CardTitle>\n                        \n                        <CardSubtitle className=\"h6 font-weight-normal align-self-end\">/month</CardSubtitle>\n                      </div>\n                      <h4 className=\"mb-3 text-black\">Plan Medium</h4>\n                      <CardSubtitle>\n                          Additional functionalities (reports and intermediate level of Customization).\n                      </CardSubtitle> \n                   </CardBody>\n                 \n                   <CardBody>\n                   <Table  responsive>\n                        <div className=\"features\">\n                          <tbody>\n                            <tr>\n                              <td ><span className=\"check\"><i className=\" far fa-check-circle\"></i></span> User management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Client management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Products management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Sales management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Reports(text)</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Graphic reports</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Customization</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> Menu update(Excel)</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> Client location</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> System monitoring</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> PWA</td>\n                            </tr>\n                          </tbody>\n                        </div>\n                      </Table>\n                      <CardFooter  className=\"text-center\">\n                         <Button className=\"btn-fill\" onClick={() => history.push(\"/request/medium\")} color=\"success\" type=\"submit\">\n                          Get <i className=\"p-2 fas fa-arrow-right\"></i>\n                         </Button>\n                      </CardFooter>\n                   </CardBody>\n                  </Card>\n                </Col>\n                <Col className=\"col-12 col-lg-4\">\n                  <Card>\n                    <CardBody>\n                      <div className=\"d-flex mb-3 text-primary\">\n                        <span className=\"h5 mb-0\">$</span>\n                        <CardTitle className=\"price display-2 mb-0 price1\" data-annual=\"199\" data-monthly=\"99\">\n                          200</CardTitle>\n                        \n                        <CardSubtitle className=\"h6 font-weight-normal align-self-end\">/month</CardSubtitle>\n                      </div>\n                      <h4 className=\"mb-3 text-black\">Plan Full</h4>\n                      <CardSubtitle>   \n                          Additional features plus basic and intermediate functionalities\n                        </CardSubtitle> \n                   </CardBody>\n                 \n                   <CardBody>\n                   <Table  responsive>\n                        <div className=\"features\">\n                          <tbody>\n                            <tr>\n                              <td ><span className=\"check\"><i className=\" far fa-check-circle\"></i></span> User management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Client management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Products management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Sales management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Reports(text)</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Graphic reports</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Customization</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Menu update(Excel)</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Client location</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> System monitoring</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> PWA</td>\n                            </tr>\n                          </tbody>\n                        </div>\n                      </Table>\n                      <CardFooter  className=\"text-center\">\n                         <Button className=\"btn-fill\" onClick={() => history.push(\"/request/full\")} color=\"success\" type=\"submit\">\n                          Get <i className=\"p-2 fas fa-arrow-right\"></i>\n                         </Button>\n                      </CardFooter>\n                   </CardBody>\n                  </Card>\n                </Col>\n             </Row>\n          </Container>\n       \n        </section>\n        <div className=\"onda-pricing-team\">\n              <svg viewBox=\"0 0 500 150\" preserveAspectRatio=\"none\" className=\"ondaa-pricing-team\">\n                <path d=\"M0.00,49.98 C193.28,128.78 292.61,-24.17 500.00,49.98 L500.00,0.00 L0.00,0.00 Z\" className=\"ondaaa-pricing-team\">\n                </path>\n              </svg>\n          </div>\n        <div className=\"onda-team\">\n              <svg viewBox=\"0 0 500 150\" preserveAspectRatio=\"none\" className=\"ondaa-team\">\n                <path d=\"M0.00,49.98 C149.99,150.00 349.20,-49.98 500.00,49.98 L500.00,150.00 L0.00,150.00 Z\" className=\"ondaaa-team\">\n                </path>\n              </svg>\n          </div>\n          \n        <section id=\"team\" className=\"team offsset text-center\">\n          <Container className=\" p-5\">\n          <h1 className=\"text-white\">Team Development</h1>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer ultrices nisi libero, sed dignissim leo.</p>\n            <Row className=\"py-4\">\n              <Col className=\"col-12 col-lg-3\">\n                <Card>\n                  <CardBody>\n                    <CardTitle className=\"text-black\">Cristian Vallecilla</CardTitle>\n                    <CardSubtitle>Desarrollador frontend</CardSubtitle>\n                  </CardBody>\n                  <img width=\"50%\" src={avatar} alt=\"avatar\" className=\"img-fluid rounded-circle\"/>\n                  <CardBody>\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n                    <div className=\"d-flex flex-row justify-content-center\">\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-facebook\"></i>\n                        </div>\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-github\"></i>\n                      </div>\n                      <div className=\"p-2\">\n                        <i className=\"fab fa-discord\"></i>\n                      </div>\n                    </div>\n                  </CardBody>\n\n                </Card>\n              </Col>\n              <Col className=\"col-12 col-lg-3\">\n                <Card>\n                  <CardBody>\n                    <CardTitle className=\"text-black\">Jem Pool Suarez</CardTitle>\n                    <CardSubtitle>Desarrollador frontend</CardSubtitle>\n                  </CardBody>\n                  <img width=\"50%\" src={avatar} alt=\"avatar\" className=\"img-fluid rounded-circle\"/>\n                  <CardBody>\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n                    <div className=\"d-flex flex-row justify-content-center\">\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-facebook\"></i>\n                        </div>\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-github\"></i>\n                      </div>\n                      <div className=\"p-2\">\n                        <i className=\"fab fa-discord\"></i>\n                      </div>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col className=\"col-12 col-lg-3\">\n                <Card>\n                  <CardBody>\n                    <CardTitle  className=\"text-black\">Esneider Manzano</CardTitle>\n                    <CardSubtitle>Desarrollador backend</CardSubtitle>\n                  </CardBody>\n                  <img width=\"50%\" src={avatar} alt=\"avatar\" className=\"img-fluid rounded-circle\"/>\n                  <CardBody>\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n                    <div className=\"d-flex flex-row justify-content-center\">\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-facebook\"></i>\n                        </div>\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-github\"></i>\n                      </div>\n                      <div className=\"p-2\">\n                        <i className=\"fab fa-discord\"></i>\n                      </div>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col className=\"col-12 col-lg-3\">\n                <Card>\n                  <CardBody>\n                    <CardTitle className=\"text-black\">Christian Taborda</CardTitle>\n                    <CardSubtitle>Desarrollador backend</CardSubtitle>\n                  </CardBody>\n                  <img width=\"50%\" src={avatar} alt=\"avatar\" className=\"img-fluid rounded-circle\"/>\n                  <CardBody>\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n                    <div className=\"d-flex flex-row justify-content-center\">\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-facebook\"></i>\n                        </div>\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-github\"></i>\n                      </div>\n                      <div className=\"p-2\">\n                        <i className=\"fab fa-discord\"></i>\n                      </div>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n            </Container>\n        </section>\n        <div className=\"onda-footer\">\n              <svg viewBox=\"0 0 500 150\" preserveAspectRatio=\"none\" className=\"ondaa-footer\">\n                <path d=\"M0.00,49.98 C149.99,150.00 349.20,-49.98 500.00,49.98 L500.00,150.00 L0.00,150.00 Z\" className=\"ondaaa-footer\">\n                </path>\n              </svg>\n          </div>\n        <section id=\"m-pay\" className=\"pay offsset py-2\">\n          <div className=\"container\">\n             <div className=\"row justify-content-center\"> \n                 <div className=\"col-12\">\n                    <h3 className=\"mb-4 text-center\">We accept the following payment methods</h3>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-center\">\n                    <div className=\"p-2\">\n                       <i className=\" tamano fab fa-cc-visa\" ></i>\n                    </div>\n                  <div className=\"p-2\">\n                     <i className=\"tamano fab fa-bitcoin\"></i>\n                  </div>\n                  <div className=\"p-2\">\n                    <i className=\" tamano fab fa-cc-mastercard\"></i>\n                  </div>\n                  <div className=\"p-2\"> \n                    <i className=\"tamano fab fa-cc-stripe\"></i>\n                  </div>\n                  <div className=\"p-2\">  \n                    <i className=\" tamano  fab fa-cc-amazon-pay\"></i>\n                  </div>     \n                  <div className=\"p-2\">  \n                    <i className=\"tamano fab fa-cc-paypal\"></i>\n                  </div>\n                        \n                </div>\n                          <div className=\"col-12 text-center py-3\">\n                              <a href=\"./contact.html\"><strong>Chat with us</strong></a><span class=\"border-right border-gray mx-2\"></span>Send us an email to <a href=\"mailto:support@yourcompany.com\"><strong>support@yourcompany.com</strong></a>\n                          </div>\n                      </div> \n                  </div>   \n\n        </section>\n        <Footer fluid />\n      \n        \n            \n      </body>\n\n    );\n    \n    \n\n\n};\n\nexport default LandingPage;","import React , { useState }from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport Footer from \"components/Footer.js\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport axios from \"axios\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Container,\n  Card,\n  Row,\n  Col,\n  CardBody,\n  CardFooter,\n  FormGroup,\n  Button,\n  UncontrolledAlert,\n  Alert,\n  Input,\n} from \"reactstrap\";\nimport logo from \"assets/img/simple-logo.png\";\nimport \"./Suscription.css\";\n\nfunction Suscription(props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSend, setSend] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  let history = useHistory();\n  /*\n    const [empresa, setEmpresa] = useState(\"\");\n    const [correo, setCorreo] = useState(\"\")\n    const [nombre, setNombre]= useState(\"\")\n    const [ciudad, setCiudad]= useState(\"\")\n    const [direccion, setDireccion]= useState(\"\")*/\n\n  const [initialValues, setInitialValues] = useState({\n    Company: \"\",\n    Name: \"\",\n    City: \"\",\n    Email: \"\",\n    Address: \"\",\n  });\n\n  const onSubmit = (values, { resetForm }) => {\n    let mensaje = values;\n    mensaje.Plan = props.match.params.id;\n    console.log(JSON.stringify(mensaje));\n    setSend(true);\n    setTimeout(() => {\n      resetForm(initialValues);\n    }, 600);\n    axios\n      .post(\"http://hyperfoods.team/api/categories/sendEmail/\", mensaje)\n      .then((res) => {\n        console.log(\"%c response \", \"background: #222; color: #bada55\");\n        console.table(res.data);\n      })\n      .catch((err) => console.log(err));\n    //    setTimeout(() => {  history.push(\"/\"); }, 800);\n\n    //history.push(\"/\");\n  };\n  //Schema for Field data valiation using Yup\n  const formSchema = Yup.object().shape({\n    Company: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n    Name: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n\n    Email: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .matches(\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        \"Must be a valid e-mail address\"\n      ),\n    City: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n\n    Address: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(\n        /[\\w\\[\\]`#\\^(),.'-]/g,\n        \"Must contain only letters, numbers and these symbols #  ^ ( ) , . ' -\"\n      ),\n  });\n  const mostrarAlerta = () => {\n    if (isSend) {\n      return (\n        <UncontrolledAlert color=\"success\">\n          <span>\n            <b>Sent successfully-</b>\n            We will get in touch with you in the shortest time possible\n          </span>\n        </UncontrolledAlert>\n      );\n    }\n  };\n\n  return (\n    <body data-spy=\"scroll\" data-target=\"#navbar-l\" data-offset=\"20\">\n      {\n        //Barra de navegación\n        console.log(props.match.params.id)\n      }\n      <section id=\"home\">\n        <Navbar\n          id=\"navbar-l\"\n          className=\"navbar-l navbar-expand-lg navbar-dark \"\n        >\n          <Container>\n            <a className=\"navbar-brand-l\" href=\"/\">\n              <img src={logo} alt=\"logo\" />\n            </a>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink onClick={() => history.push(\"/landing\")}>\n                    Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"#pricing\">Plans</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"#team\">Team</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"#m-pay\">Pays</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n\n        <div className=\"landing\">\n          <div className=\"home-wrap\">\n            <div className=\"home-inner \"></div>\n          </div>\n        </div>\n\n        <div className=\"caption text-center\">\n          <h1>Suscription to Hyperfoods</h1>\n          <h3 className=\" lead px-5\">Foods sales management system</h3>\n        </div>\n        <div className=\"onda-s\">\n          <svg\n            viewBox=\"0 0 500 150\"\n            preserveAspectRatio=\"none\"\n            className=\"ondaa-s\"\n          >\n            <path\n              d=\"M0.00,49.98 C149.99,150.00 349.20,-49.98 500.00,49.98 L500.00,150.00 L0.00,150.00 Z\"\n              className=\"ondaaa-s\"\n            ></path>\n          </svg>\n        </div>\n      </section>\n      <section className=\"campos py-5\">\n        <h2 className=\"title\">Plan {props.match.params.id}</h2>\n        <Container className=\"d-flex justify-content-center align-items-center\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={formSchema}\n            onSubmit={(values, { resetForm }) =>\n              onSubmit(values, { resetForm })\n            }\n          >\n            <Form>\n              <Card className=\"card-campos\">\n                <CardBody>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label htmlFor=\"Company\">Company</label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"Company\"\n                          placeholder=\"type your company name\"\n                        />\n                        <ErrorMessage\n                          name=\"Company\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label htmlFor=\"Name\">Name</label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"Name\"\n                          placeholder=\"type your full name\"\n                        />\n                        <ErrorMessage\n                          name=\"Name\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label htmlFor=\"Email\">Email address</label>\n\n                        <Field\n                          className=\"form-control\"\n                          name=\"Email\"\n                          placeholder=\"type your email address\"\n                        />\n                        <ErrorMessage\n                          name=\"Email\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label htmlFor=\"City\">City</label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"City\"\n                          placeholder=\"type your company city\"\n                        />\n                        <ErrorMessage\n                          name=\"City\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <label htmlFor=\"Email\">Address</label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"Address\"\n                          placeholder=\"type your address\"\n                        />\n                        <ErrorMessage\n                          name=\"Address\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n                <CardFooter className=\"text-center\">\n                  <Button\n                    className=\"btn-fill\"\n                    color=\"primary\"\n                    color=\"success\"\n                    type=\"submit\"\n                  >\n                    Send\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Form>\n          </Formik>\n        </Container>\n        {mostrarAlerta()}\n      </section>\n      <div className=\"onda-footer-s\">\n        <svg\n          viewBox=\"0 0 500 150\"\n          preserveAspectRatio=\"none\"\n          className=\"ondaa-footer-s\"\n        >\n          <path\n            d=\"M0.00,49.98 C149.99,150.00 349.20,-49.98 500.00,49.98 L500.00,150.00 L0.00,150.00 Z\"\n            className=\"ondaaa-footer-s\"\n          ></path>\n        </svg>\n      </div>\n      <section id=\"m-pay\" className=\"pay offsset py-2\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-12\">\n              <h3 className=\"mb-4 text-center\">\n                We accept the following payment methods\n              </h3>\n            </div>\n            <div className=\"d-flex flex-row justify-content-center\">\n              <div className=\"p-2\">\n                <i className=\" tamano fab fa-cc-visa\"></i>\n              </div>\n              <div className=\"p-2\">\n                <i className=\"tamano fab fa-bitcoin\"></i>\n              </div>\n              <div className=\"p-2\">\n                <i className=\" tamano fab fa-cc-mastercard\"></i>\n              </div>\n              <div className=\"p-2\">\n                <i className=\"tamano fab fa-cc-stripe\"></i>\n              </div>\n              <div className=\"p-2\">\n                <i className=\" tamano  fab fa-cc-amazon-pay\"></i>\n              </div>\n              <div className=\"p-2\">\n                <i className=\"tamano fab fa-cc-paypal\"></i>\n              </div>\n            </div>\n            <div className=\"col-12 text-center py-3\">\n              <a href=\"./contact.html\">\n                <strong>Chat with us</strong>\n              </a>\n              <span className=\"border-right border-gray mx-2\"></span>Send us an\n              email to{\" \"}\n              <a href=\"mailto:support@yourcompany.com\">\n                <strong>support@yourcompany.com</strong>\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Footer fluid />\n    </body>\n  );\n}\n\nexport default Suscription;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Admin from \"layouts/Admin.js\";\nimport Login from \"layouts/Login.js\";\nimport LandingPage from \"layouts/LandingPage.js\"\nimport Suscription from \"layouts/Suscription.js\"\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/css/nucleo-icons.css\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <Route  path=\"/request/:id\" component={Suscription}/>\n        <Route path=\"/landing\" component={LandingPage}/>\n        <Route path=\"/admin\" component={Admin} />\n        <Redirect from=\"/\" to=\"/admin/list-workers\" />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// serviceWorker.register();\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/simple-logo.b680ab5b.png\";","module.exports = __webpack_public_path__ + \"static/media/anime3.bd6820f1.png\";"],"sourceRoot":""}