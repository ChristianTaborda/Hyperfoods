{"version":3,"sources":["redux/Login/reducer.js","redux/constants.js","redux/Template/reducer.js","redux/Offline/reducer.js","redux/store.js","serviceWorker.js","views/url.js","views/ListWorkers.js","views/CreateWorker.js","redux/Offline/actions.js","views/ListClients.js","views/CreateClient.js","views/CreateIngredient.js","views/CreateCategory.js","views/ListProduct.js","views/CreateProduct1.js","views/CreateCombo.js","views/CardProduct.js","views/Sales/Products.js","views/Sales/Order.js","views/Sales/Payment.js","views/Sales/FinishOrder.js","views/Sales/Sales.js","routes.js","redux/Template/actions.js","components/AdminNavbar.js","components/Footer.js","components/Sidebar.js","components/FixedPlugin.js","layouts/Admin.js","redux/Login/actions.js","layouts/LoginClients.js","layouts/LoginWorkers.js","layouts/LandingPage.js","layouts/Suscription.js","index.js","RedirectRoutes.js","assets/img/simple-logo.png","assets/img/anime3.png","assets/img/logo.png"],"names":["initialState","credentials","loginReducer","state","action","type","Object","assign","payload","templateProps","networkStatus","window","navigator","onLine","sidebarOpened","bgColor","mode","logo","outterLink","text","imgSrc","templateReducer","pending","offlineReducer","worker","user","email","reducers","combineReducers","debugMiddleware","compose","devToolsExtension","f","store","createStore","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","data","href","performance","getEntriesByType","map","r","name","onupdatefound","installingWorker","installing","postMessage","onstatechange","controller","onUpdate","console","log","onSuccess","catch","error","ready","sync","ListWorkers","useState","user_type","id_user","is_active","type_document","document","surname","phone","address","userList","setUserList","useEffect","axios","get","ruta","res","err","className","Row","Col","md","Card","CardHeader","CardTitle","tag","CardBody","Table","responsive","i","key","connect","dispatch","addPendingWorkers","props","notificationAlert","useRef","initialValues","userType","Id","DocumentType","DocumentNumber","Name","LastName","PhoneNumber","Email","Address","password","changepassword","documentType","setDocumentType","setUserType","formSchema","Yup","shape","trim","required","min","matches","when","is","val","length","oneOf","notify","place","message","current","icon","autoDismiss","ref","validationSchema","onSubmit","values","resetForm","parseInt","pendingWorkers","item","sessionStorage","setItem","JSON","stringify","msg","form_data","post","status","setTimeout","FormGroup","htmlFor","Input","onChange","e","target","value","placeholder","component","CardFooter","Button","disabled","color","ListClients","credit_card","clientList","setClientList","client","CreateClient","CreditCard","CreateIngredient","isSend","setSend","ingredients","setIngredients","loading","setLoading","nameIngredient","priceIngredient","additionalIngredient","aditional","setAditional","response","a","undefined","table","Container","id","UncontrolledAlert","toggle","mostrarAlerta","ingredient","codeIngredient","CreateCategory","categorys","setCategorys","nameCategory","category","codeCategory","Clients","codeProduct","categoryProduct","nameProduct","descriptionProduct","priceProduct","productList","setProdcutList","product","CreateProduct1","isSelected","setSelected","ingredientChoosed","setIngredientsChoosed","categoryChoosed","setCategoryChoosed","image","size","setImage","FormData","append","getAll","headers","Label","for","event","images","files","selectFiles","multiple","FormText","onClick","alt","src","URL","createObjectURL","options","onSelect","selectedList","selectedItem","onRemove","removedItem","displayValue","CreateCombo","nameCombo","descriptionCombo","discountCombo","products","setproducts","productsChoosed","setproductsChoosed","CardProduct","product1","setSale","ingredientProduct","imageProduct","selectedValues","filter","Products","productChoosed","setproductChoosed","useHistory","sale","tLista","push","Order","order","combos","codeCombo","priceProducts","priceCombos","priceProductsCombos","trimCommas","str","join","replaceAll","slice","toFixed","discount","priceCombo","basic","productCombo","extraPriceItem","extra","totalComboItem","setGranTotal","granTotal","Payment","outline","setPayment","creditCard","newCreditCard","cash","check","defaultChecked","payment","getItem","FinishOrder","history","disabledFields","setDisabledFields","paid_until","CVV","setInitialValues","placeHolders","onSubmitCash","CreditCardPayments","defaultValue","CardText","Cash","Sales","activeStep","setActiveStep","nextStep","previousStep","steps","title","lineMarginOffset","availableRoutes","routesUsers","path","layout","CreateWorker","Product","ProductCreate","routesClients","setSidebarOpened","collapseOpen","setCollapseOpen","setColor","routes","channel","BroadcastChannel","notificationFromServiceWorker","removeItem","addEventListener","updateColor","removeEventListener","innerWidth","Navbar","classNames","expand","fluid","toggled","documentElement","classList","NavbarBrand","preventDefault","route","pathname","aria-expanded","aria-label","data-target","data-toggle","Collapse","navbar","isOpen","Nav","reload","UncontrolledDropdown","nav","DropdownToggle","caret","require","DropdownMenu","right","NavLink","DropdownItem","divider","Footer","ps","Date","getFullYear","sidebar","platform","indexOf","PerfectScrollbar","suppressScrollX","suppressScrollY","destroy","toggleSidebar","logoImg","logoText","to","innerLink","prop","redirect","routeName","pro","activeClassName","setBgColor","classes","setClasses","activateMode","body","add","remove","data-color","setNetworkStatus","backgroundColor","setBackgroundColor","mainPanel","tables","querySelectorAll","scrollTop","scrollingElement","Sidebar","AdminNavbar","getRoutes","from","setCredentials","firebase","apps","initializeApp","apiKey","authDomain","isSignedIn","setIsSignedIn","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","TwitterAuthProvider","callbacks","signInSuccessWithAuthResult","onAuthStateChanged","currentUser","displayName","emailVerified","providerData","signOut","firebaseAuth","LandingPage","setIsOpen","data-spy","data-offset","NavbarToggler","NavItem","class","viewBox","preserveAspectRatio","d","data-annual","data-monthly","CardSubtitle","width","avatar","Suscription","Company","City","params","mensaje","Plan","createBrowserHistory","ReactDOM","render","Admin","exact","LoginWorkers","LoginClients","getElementById","process","origin","fetch","contentType","unregister","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.83004dce.chunk.js","sourcesContent":["import { SET_CREDENTIALS } from \"../constants\";\n\nconst initialState = {\n  credentials: {},\n};\n\nfunction loginReducer(state = initialState, action) {\n  if (action.type === SET_CREDENTIALS) {\n    return Object.assign({}, state, {\n      credentials: action.payload,\n    });\n  }\n  return state;\n}\n\nexport default loginReducer;\n","export const SET_CREDENTIALS = \"SET_CREDENTIALS\";\nexport const SET_SIDEBAR_OPENED = \"SET_SIDEBAR_OPENED\";\nexport const SET_BGCOLOR = \"SET_BGCOLOR\";\nexport const SET_NETWORKSTATUS = \"SET_NETWORKSTATUS\";\nexport const ADD_PENDING_WORKERS = \"ADD_PENDING_WORKERS\";","import { SET_SIDEBAR_OPENED, SET_BGCOLOR, SET_NETWORKSTATUS } from \"../constants.js\";\nimport logo from \"../../assets/img/simple-logo.png\";\n\nconst initialState = {\n  templateProps: {\n    networkStatus: window.navigator.onLine, // [true, false]\n    sidebarOpened: true,// [true, false]\n    bgColor: \"blue\", //[\"primary\", \"blue\", \"green\"]\n    mode: \"light\", // [\"light\", \"dark\"]\n    logo: {\n      outterLink: \"\",\n      text: \"HyperFoods\",\n      imgSrc: logo,\n    },\n  },\n};\n\nfunction templateReducer(state = initialState, action) {\n  // setSidebarOpened\n  if (action.type === SET_SIDEBAR_OPENED) {\n    return Object.assign(\n      {},\n      {\n        templateProps: {\n          ...state.templateProps,\n          sidebarOpened: action.payload,\n        },\n      }\n    );\n  }\n\n  // setBgColor\n  if (action.type === SET_BGCOLOR) {\n    return Object.assign(\n      {},\n      {\n        templateProps: {\n          ...state.templateProps,\n          bgColor: action.payload,\n        },\n      }\n    );\n  }\n\n    // setUserType\n    if (action.type === SET_NETWORKSTATUS) {\n      return Object.assign(\n        {},\n        {\n          templateProps: {\n            ...state.templateProps,\n            networkStatus: action.payload,\n          },\n        }\n      );\n    }\n\n  return state;\n}\n\nexport default templateReducer;\n","import { ADD_PENDING_WORKERS } from \"../constants\";\n\nconst initialState = {\n  pending: [],\n};\n\nfunction offlineReducer(state = initialState, action) {\n  if (action.type === ADD_PENDING_WORKERS) {\n    return {\n      pending: [\n        ...state.pending,\n        {\n          worker: action.payload.user.email,\n        },\n      ],\n    };\n  }\n\n  return state;\n}\n\nexport default offlineReducer;\n","import { createStore, combineReducers, compose } from \"redux\";\nimport loginReducer from \"./Login/reducer.js\";\nimport templateReducer from \"./Template/reducer.js\";\nimport offlineReducer from \"./Offline/reducer.js\"\n\nconst reducers = combineReducers({\n  loginReducer,\n  templateReducer,\n  offlineReducer,\n});\n\nconst debugMiddleware = compose(\n  window.devToolsExtension ? window.devToolsExtension() : (f) => f\n);\n\nconst store = createStore(reducers, debugMiddleware);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/custom-service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // console.log(\n          //   \"This web app is being served cache-first by a service \" +\n          //     \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          // );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // Getting the resources urls for Pre-caching the page\n      const data = {\n        type: \"CACHE_URLS\",\n        payload: [\n          window.location.href,\n          ...performance.getEntriesByType(\"resource\").map((r) => r.name),\n        ],\n      };\n\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing.postMessage(data);\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // console.log(\n              //   \"New content is available and will be used when all \" +\n              //   \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              //   );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n\n  // Background Sync\n  navigator.serviceWorker.ready\n    .then(function (registration) {\n      console.log(\"Service Worker Ready\");\n      return registration.sync.register(\"sendFormData\");\n    })\n    .then(function () {\n      console.log(\"sync event registered\");\n    })\n    .catch(function () {\n      // system was unable to register for a sync,\n      // this could be an OS-level restriction\n      console.log(\"sync registration failed\");\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"custom-service-worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","\nexport default \"tenant1.localhost:8000\";","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ruta from \"./url.js\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction ListWorkers() {\n  const [userList, setUserList] = useState([\n    {\n      user_type: \"-\",\n      user: {\n        id_user: \"-\",\n        is_active: \"-\",\n        type_document: \"-\",\n        document: \"-\",\n        name: \"-\",\n        surname: \"-\",\n        phone: \"-\",\n        address: \"-\",\n        email: \"-\",\n      },\n    },\n  ]);\n  \n  useEffect(() => {\n    axios\n      .get('http://'+ruta+'/api/users/worker/')\n      .then((res) => setUserList(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Workers</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Status</th>\n                      <th>User Type</th>\n                      <th>Document</th>\n                      <th>Id Type</th>\n                      <th>Id Number</th>\n                      <th>Name</th>\n                      <th>Last Name</th>\n                      <th>Phone Number</th>\n                      <th>Address</th>\n                      <th>Email</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {userList.map((user, i) => {\n                      return (\n                        <tr key={i}>\n                          <td>\n                            {user.user.is_active === \"-\"\n                              ? \"-\"\n                              : user.user.is_active\n                              ? \"true\"\n                              : \"false\"}\n                          </td>\n                          <td>\n                            {user.user.is_active === \"-\"\n                              ? \"-\"\n                              : user.user_type === 1\n                              ? \"Manager\"\n                              : \"Digitalizer\"}\n                          </td>\n                          <td>{user.user.document}</td>\n                          <td>\n                            {user.user.is_active === \"-\"\n                              ? \"-\"\n                              : user.user.type_document === 1\n                              ? \"CC\"\n                              : \"TI\"}\n                          </td>\n                          <td>{user.user.id_user}</td>\n                          <td>{user.user.name}</td>\n                          <td>{user.user.surname}</td>\n                          <td>{user.user.phone}</td>\n                          <td>{user.user.address}</td>\n                          <td>{user.user.email}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default ListWorkers;\n","import React, { useState, useRef } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport NotificationAlert from \"react-notification-alert\";\nimport { connect } from \"react-redux\";\nimport { addPendingWorkers } from \"../redux/Offline/actions\";\nimport axios from \"axios\";\nimport ruta from \"./url.js\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardFooter,\n  FormGroup,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction CreateWorker(props) {\n  const notificationAlert = useRef();\n  const initialValues = {\n    userType: \"3\",\n    Id: \"4\",\n    DocumentType: \"1\",\n    DocumentNumber: \"979653010\",\n    Name: \"Jesus\",\n    LastName: \"Cuellar\",\n    PhoneNumber: \"6234231507\",\n    Email: \"jesus@gmail.com\",\n    Address: \"6510 Bay Street\",\n    password: \"1234\",\n    changepassword: \"1234\",\n\n    // userType: \"\",\n    // Id: \"\",\n    // DocumentType: \"\",\n    // DocumentNumber: \"\",\n    // Name: \"\",\n    // LastName: \"\",\n    // PhoneNumber: \"\",\n    // Email: \"\",\n    // Address: \"\",\n    // password: \"\",\n    // changepassword: \"\",\n  };\n  const [documentType, setDocumentType] = useState(\"CC\");\n  const [userType, setUserType] = useState(\"manager\");\n\n  const onSubmit = (values, { resetForm }) => {\n    let user = values;\n\n    let payload = {\n      user_type: userType === \"manager\" ? 1 : 2,\n      user: {\n        id_user: parseInt(user.Id),\n        is_active: true,\n        type_document: documentType === \"CC\" ? 1 : 2,\n        document: user.DocumentNumber,\n        name: user.Name,\n        surname: user.LastName,\n        phone: user.PhoneNumber,\n        address: user.Address,\n        email: user.Email,\n        password: user.password,\n      },\n    };\n\n    // Offline Only !! --------------------------------------|\n    if (!props.networkStatus) {\n      props.addPendingWorkers(payload);\n      let pendingWorkers = [];\n      if (props.pending.length) {\n        pendingWorkers = [\n          ...props.pending.map((item) => {\n            let email = { email: item.worker };\n            return email;\n          }),\n          { email: payload.user.email },\n        ];\n      } else {\n        pendingWorkers = [{ email: payload.user.email }];\n      }\n\n      window.sessionStorage.setItem(\n        \"workers\",\n        JSON.stringify([...pendingWorkers])\n      );\n    }\n    //-------------------------------------------------------|\n\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n      // send message to service worker via postMessage\n      var msg = {\n        form_data: payload,\n      };\n      navigator.serviceWorker.controller.postMessage(msg);\n    }\n\n    axios\n      .post(\"http://\" + ruta + \"/api/users/worker/create/\", payload)\n      .then((res) => {\n        if (res.status === 201) {\n          notify(\"br\", \"success\", \"User Created Successfully\");\n          setTimeout(() => {\n            resetForm(initialValues);\n          }, 600);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        notify(\"br\", \"danger\", \"Data not saved\");\n        setTimeout(() => {\n          resetForm(initialValues);\n        }, 600);\n      });\n  };\n\n  //Schema for input data valiation using Yup\n  const formSchema = Yup.object().shape({\n    Id: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(1, \"Minimum of 1 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    DocumentNumber: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    Name: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n    LastName: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n    PhoneNumber: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    Email: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .matches(\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        \"Must be a valid e-mail address\"\n      ),\n    Address: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(\n        /[\\w\\[\\]`#\\^(),.'-]/g,\n        \"Must contain only letters, numbers and these symbols #  ^ ( ) , . ' -\"\n      ),\n    password: Yup.string()\n      .required(\"This field is required\")\n      .min(4, \"Minimum of 4 characters\"),\n    changepassword: Yup.string()\n      .required(\"This field is required\")\n      .min(4, \"Minimum of 4 characters\")\n      .when(\"password\", {\n        is: (val) => (val && val.length > 0 ? true : false),\n        then: Yup.string().oneOf(\n          [Yup.ref(\"password\")],\n          \"Both password need to be the same\"\n        ),\n      }),\n  });\n\n  //Function for notification settings\n  const notify = (place, type, message) => {\n    notificationAlert.current.notificationAlert({\n      place: place,\n      type: type, //[\"primary\", \"success\", \"danger\", \"warning\", \"info\"]\n      message: <b>{message}</b>,\n      icon:\n        type === \"success\"\n          ? \"tim-icons icon-check-2\"\n          : \"tim-icons icon-alert-circle-exc\",\n      autoDismiss: 7,\n    });\n  };\n\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  return (\n    <>\n      <div className=\"content\">\n        <div className=\"react-notification-alert-container\">\n          <NotificationAlert ref={notificationAlert} />\n        </div>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={formSchema}\n          onSubmit={(values, { resetForm }) => onSubmit(values, { resetForm })}\n        >\n          <Form>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Create Worker</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"2\">\n                    <FormGroup>\n                      <label htmlFor=\"UserType\">User type</label>\n                      <Input\n                        type=\"select\"\n                        name=\"UserType\"\n                        onChange={(e) => setUserType(e.target.value)}\n                      >\n                        <option>Manager</option>\n                        <option>Digitalizer</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"px-md-1\" md=\"3\">\n                    <FormGroup>\n                      <label htmlFor=\"Id\">Id</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"Id\"\n                        placeholder=\"type your id\"\n                      />\n                      <ErrorMessage\n                        name=\"Id\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"px-md-1\" md=\"2\">\n                    <FormGroup>\n                      <label htmlFor=\"DocumentType\">Document Type</label>\n                      <Input\n                        type=\"select\"\n                        name=\"DocumentType\"\n                        onChange={(e) => setDocumentType(e.target.value)}\n                      >\n                        <option>CC</option>\n                        <option>TI</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"5\">\n                    <FormGroup>\n                      <label htmlFor=\"documentNumber\">Document Number</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"DocumentNumber\"\n                        placeholder=\"type your document number\"\n                      />\n                      <ErrorMessage\n                        name=\"DocumentNumber\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"Name\">Name</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"Name\"\n                        placeholder=\"type your name\"\n                      />\n                      <ErrorMessage\n                        name=\"Name\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"LastName\">Last Name</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"LastName\"\n                        placeholder=\"type your lastname\"\n                      />\n                      <ErrorMessage\n                        name=\"LastName\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"PhoneNumber\">Phone Number</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"PhoneNumber\"\n                        placeholder=\"type your phone number\"\n                      />\n                      <ErrorMessage\n                        name=\"PhoneNumber\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"Email\">Email address</label>\n\n                      <Field\n                        className=\"form-control\"\n                        name=\"Email\"\n                        placeholder=\"type your email address\"\n                      />\n                      <ErrorMessage\n                        name=\"Email\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md=\"12\">\n                    <FormGroup>\n                      <label htmlFor=\"Email\">Address</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"Address\"\n                        placeholder=\"type your address\"\n                      />\n                      <ErrorMessage\n                        name=\"Address\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <br />\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"PhoneNumber\">Password</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"password\"\n                        placeholder=\"type your password\"\n                        type=\"password\"\n                      />\n                      <ErrorMessage\n                        name=\"password\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"changepassword\">\n                        Password Confirmation\n                      </label>\n\n                      <Field\n                        className=\"form-control\"\n                        name=\"changepassword\"\n                        placeholder=\"type your password again\"\n                        type=\"password\"\n                      />\n                      <ErrorMessage\n                        name=\"changepassword\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <Button\n                  disabled={props.networkStatus && !!props.pending.length}\n                  type=\"submit\"\n                  className=\"btn-fill\"\n                  color=\"info\"\n                  onSubmit={() => {}}\n                >\n                  Save\n                </Button>\n              </CardFooter>\n            </Card>\n          </Form>\n        </Formik>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pending: state.offlineReducer.pending,\n    networkStatus: state.templateReducer.templateProps.networkStatus,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPendingWorkers: (worker) => dispatch(addPendingWorkers(worker)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateWorker);\n","import { ADD_PENDING_WORKERS } from \"../constants\";\n\nexport function addPendingWorkers(payload) {\n  return { type: ADD_PENDING_WORKERS, payload };\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ruta from \"./url.js\"\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction ListClients() {\n  const [clientList, setClientList] = useState([\n    {\n      credit_card: \"-\",\n      id_user: \"-\",\n      user: {\n        is_active: \"-\",\n        type_document: \"-\",\n        document: \"-\",\n        name: \"-\",\n        surname: \"-\",\n        phone: \"-\",\n        address: \"-\",\n        email: \"-\",\n      },\n    },\n  ]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://\"+ruta+\"/api/users/client/\")\n      .then((res) => setClientList(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">List Clients</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Status</th>\n                      <th>Document</th>\n                      <th>Id Type</th>\n                      <th>Id User</th>\n                      <th>Name</th>\n                      <th>Last Name</th>\n                      <th>Phone Number</th>\n                      <th>Address</th>\n                      <th>Email</th>\n                      <th>Credit Card</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {clientList.map((client, i) => {                      \n                      return (\n                        <tr key={i}>\n                          <td>\n                            {client.user.is_active === \"-\"\n                              ? \"-\"\n                              : client.user.is_active\n                              ? \"true\"\n                              : \"false\"}\n                          </td>\n                          <td>{client.user.document}</td>\n                          <td>\n                            {client.user.is_active === \"-\"\n                              ? \"-\"\n                              : client.user.type_document === 1\n                              ? \"CC\"\n                              : \"TI\"}\n                          </td>\n                          <td>{client.id_user}</td>\n                          <td>{client.user.name}</td>\n                          <td>{client.user.surname}</td>\n                          <td>{client.user.phone}</td>\n                          <td>{client.user.address}</td>\n                          <td>{client.user.email}</td>\n                          <td>{client.credit_card}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default ListClients;\n","import React, { useState, useRef } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport NotificationAlert from \"react-notification-alert\";\nimport axios from \"axios\";\nimport ruta from \"./url.js\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardFooter,\n  FormGroup,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction CreateClient() {\n  const notificationAlert = useRef();\n  const initialValues = {\n    // Id: \"2\",\n    // DocumentType: \"1\",\n    // DocumentNumber: \"577653910\",\n    // Name: \"Alexandra\",\n    // LastName: \"Usma\",\n    // PhoneNumber: \"5234201007\",\n    // Email: \"a.usma@gmail.com\",\n    // CreditCard: \"908883883\",\n    // Address: \"4460 Green Street\",\n    // password: \"1234\",\n    // changepassword: \"1234\",\n\n    Id: \"\",\n    DocumentType: \"\",\n    DocumentNumber: \"\",\n    Name: \"\",\n    LastName: \"\",\n    PhoneNumber: \"\",\n    Email: \"\",\n    CreditCard: \"\",\n    Address: \"\",\n    password: \"\",\n    changepassword: \"\",\n  };\n  const [documentType, setDocumentType] = useState(\"CC\");\n\n  const onSubmit = (values, { resetForm }) => {\n    let user = values;\n\n    let payload = {\n      credit_card: user.CreditCard,\n      user: {\n        id_user: parseInt(user.Id),\n        is_active: true,\n        type_document: documentType === \"CC\" ? 1 : 2,\n        document: user.DocumentNumber,\n        name: user.Name,\n        surname: user.LastName,\n        phone: user.PhoneNumber,\n        email: user.Email,\n        address: user.Address,\n        password: user.password,\n      },\n    };\n\n    console.log(payload);\n    axios\n      .post(\"http://\" + ruta + \"/api/users/client/create/\", payload)\n      .then((res) => {\n        if (res.status === 201) {\n          notify(\"br\", \"success\", \"User Created Successfully\");\n          setTimeout(() => {\n            resetForm(initialValues);\n          }, 600);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        notify(\"br\", \"danger\", \"Error establishing a database connection\");\n      });\n  };\n\n  //Schema for input data valiation using Yup\n  const formSchema = Yup.object().shape({\n    Id: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(1, \"Minimum of 1 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    DocumentNumber: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    Name: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n    LastName: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n    PhoneNumber: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    Email: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .matches(\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        \"Must be a valid e-mail address\"\n      ),\n    CreditCard: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    Address: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(\n        /[\\w\\[\\]`#\\^(),.'-]/g,\n        \"Must contain only letters, numbers and these symbols #  ^ ( ) , . ' -\"\n      ),\n    password: Yup.string()\n      .required(\"This field is required\")\n      .min(4, \"Minimum of 4 characters\"),\n    changepassword: Yup.string()\n      .required(\"This field is required\")\n      .min(4, \"Minimum of 4 characters\")\n      .when(\"password\", {\n        is: (val) => (val && val.length > 0 ? true : false),\n        then: Yup.string().oneOf(\n          [Yup.ref(\"password\")],\n          \"Both password need to be the same\"\n        ),\n      }),\n  });\n\n  //Function for notification settings\n  const notify = (place, type, message) => {\n    notificationAlert.current.notificationAlert({\n      place: place,\n      type: type, //[\"primary\", \"success\", \"danger\", \"warning\", \"info\"]\n      message: <b>{message}</b>,\n      icon:\n        type === \"success\"\n          ? \"tim-icons icon-check-2\"\n          : \"tim-icons icon-alert-circle-exc\",\n      autoDismiss: 7,\n    });\n  };\n\n  return (\n    <>\n      <div className=\"content\">\n        <div className=\"react-notification-alert-container\">\n          <NotificationAlert ref={notificationAlert} />\n        </div>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={formSchema}\n          onSubmit={(values, { resetForm }) => onSubmit(values, { resetForm })}\n        >\n          <Form>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Create Client</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"5\">\n                    <FormGroup>\n                      <label htmlFor=\"Id\">Id</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"Id\"\n                        placeholder=\"type your id\"\n                      />\n                      <ErrorMessage\n                        name=\"Id\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"px-md-1\" md=\"2\">\n                    <FormGroup>\n                      <label htmlFor=\"DocumentType\">Document Type</label>\n                      <Input\n                        type=\"select\"\n                        name=\"DocumentType\"\n                        onChange={(e) => setDocumentType(e.target.value)}\n                      >\n                        <option>CC</option>\n                        <option>TI</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"5\">\n                    <FormGroup>\n                      <label htmlFor=\"documentNumber\">Document Number</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"DocumentNumber\"\n                        placeholder=\"type your id\"\n                      />\n                      <ErrorMessage\n                        name=\"DocumentNumber\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"Name\">Name</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"Name\"\n                        placeholder=\"type your name\"\n                      />\n                      <ErrorMessage\n                        name=\"Name\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"LastName\">Last Name</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"LastName\"\n                        placeholder=\"type your lastname\"\n                      />\n                      <ErrorMessage\n                        name=\"LastName\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"PhoneNumber\">Phone Number</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"PhoneNumber\"\n                        placeholder=\"type your phone number\"\n                      />\n                      <ErrorMessage\n                        name=\"PhoneNumber\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"Email\">Email address</label>\n\n                      <Field\n                        className=\"form-control\"\n                        name=\"Email\"\n                        placeholder=\"type your email address\"\n                      />\n                      <ErrorMessage\n                        name=\"Email\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"CreditCard\">Credit Card Number</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"CreditCard\"\n                        placeholder=\"type your credit card number\"\n                      />\n                      <ErrorMessage\n                        name=\"CreditCard\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"Email\">Address</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"Address\"\n                        placeholder=\"type your address\"\n                      />\n                      <ErrorMessage\n                        name=\"Address\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <br />\n                <Row>\n                  <Col className=\"pr-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"PhoneNumber\">Password</label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"password\"\n                        placeholder=\"type your password\"\n                        type=\"password\"\n                      />\n                      <ErrorMessage\n                        name=\"password\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col className=\"pl-md-1\" md=\"6\">\n                    <FormGroup>\n                      <label htmlFor=\"changepassword\">\n                        Password Confirmation\n                      </label>\n\n                      <Field\n                        className=\"form-control\"\n                        name=\"changepassword\"\n                        placeholder=\"type your password again\"\n                        type=\"password\"\n                      />\n                      <ErrorMessage\n                        name=\"changepassword\"\n                        component=\"div\"\n                        className=\"field-error text-danger\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <Button\n                  type=\"submit\"\n                  className=\"btn-fill\"\n                  color=\"info\"\n                  onSubmit={() => {}}\n                >\n                  Save\n                </Button>\n              </CardFooter>\n            </Card>\n          </Form>\n        </Formik>\n      </div>\n    </>\n  );\n}\n\nexport default CreateClient;\n","import React , { useState,useEffect }from 'react'\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport axios from \"axios\";\nimport {\n    Card,Table,Col,  CardBody,\n    CardFooter, FormGroup,  Button,UncontrolledAlert,Spinner,Container, Input\n  } from 'reactstrap';\nimport './spinner.css'\n\nimport ruta from \"./url.js\"\n\nfunction CreateIngredient(){\n\n    const [isSend, setSend]= useState(false) \n    const [ingredients, setIngredients]= useState([])\n    const [loading, setLoading]=useState(false)\n\n    const [initialValues, setInitialValues] = useState({\n        nameIngredient: \"\",\n        priceIngredient:\"\",\n        additionalIngredient:\"\"\n    });\n    const [aditional, setAditional]=useState(true)\n    useEffect(() => {\n      setLoading(true)\n        axios.get('http://'+ruta+'/api/ingredients/')\n        .then((response) => {\n          setLoading(false)\n            console.log(response.data)\n          setIngredients(response.data)\n        });\n    },[]);\n\n    \n    const onSubmit = async(values, { resetForm }) => {\n      setLoading(true)\n      if(aditional===undefined){\n          setAditional(true)\n      }  \n      values[\"additionalIngredient\"]=aditional\n      console.log(JSON.stringify(values));\n       \n     setTimeout(() => {\n         resetForm(initialValues);\n      }, 600);\n      await axios\n      .post(\"http://\"+ruta+\"/api/ingredients/create/\",values)\n      .then((res) => {\n         setSend(true)\n         setLoading(false)\n         console.log(\"%c response \", \"background: #222; color: #bada55\");\n         console.table(res.data);\n         axios.get('http://'+ruta+'/api/ingredients/')\n          .then((response) => {\n            setIngredients(response.data)\n         });\n        })\n       .catch((err) => console.log(err)) \n     \n      \n      }\n\n      const formSchema = Yup.object().shape({\n   \n        nameIngredient: Yup.string()\n            .trim()\n            .required(\"Required field\")\n            .min(2, \"Minimum of 2 characters\")\n            .matches(\n              /^([A-Z,a-z.'-])+/g,\n              \"Must contain only letters and these symbols , . '   - \"\n            ),\n        priceIngredient: Yup.string()\n          .trim()\n          .required(\"Required field\")\n          .min(1, \"Minimum of 1 characters\")\n          .matches(/^[0-9][0-9]*$/, \"Must be an integer and positive number\"),\n            \n      });\n    \n    const mostrarAlerta = () => {\n        if (isSend) {\n            return (\n              <UncontrolledAlert color=\"success\" toggle={()=>setSend(false)}>\n              <span>\n                <b>Successfully created</b>\n              </span>\n            </UncontrolledAlert>\n            )\n        }\n        \n    }\n    return(\n        <>\n        \n        <div className=\"content\">\n       \n       \n            <Card >\n              <h3 className=\"title pl-md-4 py-2\">Create Ingredient</h3>\n             \n              <Formik\n                initialValues={initialValues}\n                validationSchema={formSchema}\n                onSubmit={(values, { resetForm }) => onSubmit(values, { resetForm })}\n              > \n             <Form  > \n              <CardBody >\n              <Container className=\"d-flex justify-content-center align-items-center\">\n                <Col >\n                <FormGroup>\n                  <label>Ingredient name</label>\n                  <Field\n                  className=\"form-control\"\n                    placeholder=\"Type the ingredient name\"\n                    type=\"text\"\n                    name=\"nameIngredient\"\n                    />\n                    <ErrorMessage\n                            name=\"nameIngredient\"\n                            component=\"div\"\n                            className=\"field-error text-danger\"\n                          />\n                  </FormGroup>\n                </Col>\n                <Col >\n                <FormGroup>\n                  <label>Ingredient price</label>\n                  <Field\n                  className=\"form-control\"\n                    placeholder=\"Type the price \"\n                    type=\"text\"\n                    name=\"priceIngredient\"\n                    />\n                    <ErrorMessage\n                            \n                            name=\"priceIngredient\"\n                            component=\"div\"\n                            className=\"field-error text-danger\"\n                          />\n                  </FormGroup>\n                </Col>\n                <Col >\n               \n                  <label>Aditional?</label>\n                  <Input \n                 type=\"select\" \n                 name=\"select\" \n                 id=\"exampleSelect\" \n                 onChange={(e)=>setAditional(e.target.value)}\n                >\n                <option value={true} >Yes</option>\n                <option value={false} >No</option>\n                </Input>    \n                   \n                </Col>\n                </Container>   \n            </CardBody>\n                  <CardFooter className=\"text-center\">\n                    <Button \n                      className=\"btn-fill\" \n                      color=\"primary\" \n                      color=\"info\"\n                      type=\"submit\"\n                    >\n                    Create\n                    </Button>\n                  </CardFooter>\n                  </Form>\n         </Formik>\n         {mostrarAlerta()}\n         \n         <h3 className=\"title pl-md-4 py-2\">Ingredients</h3>\n         <Container className=\"text-center\">\n           {loading ? \n           <div className=\"spinner\"></div>:\n            <Table responsive>\n            <thead >\n              <tr>\n                <th>Code</th>\n                <th>Nombre</th>\n                <th>Price</th>\n                <th>Aditional?</th>\n              </tr>\n            </thead>\n            <tbody>\n              {ingredients.map((ingredient, i) => {\n                 return (\n                   <tr key={i}>\n                     <td>{ingredient.codeIngredient}</td>\n                     <td>{ingredient.nameIngredient}</td>\n                     <td>{ingredient.priceIngredient}</td>\n                     <td>{ingredient.additionalIngredient? \"Si\":\"No\"}</td>\n                     <td>\n                       <Button\n                         type=\"button\"\n                         color=\"warning\"\n                         className=\"fa fa-cog\"\n                 >{\" \"}Edit</Button>\n                     </td>\n                         \n                   </tr>\n                 );\n               })}\n            </tbody>\n          </Table>\n\n\n           }\n          \n\n         </Container>\n            \n             \n              \n           </Card>\n         \n       \n        \n       </div>\n      </>\n    );\n\n  }\n\n  export default CreateIngredient;","import React , { useState,useEffect }from 'react'\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport axios from \"axios\";\nimport {\n    Card,Table,Col,  CardBody,\n    CardFooter, FormGroup,  Button,UncontrolledAlert,Spinner,Container, Label\n  } from 'reactstrap';\nimport './spinner.css'\nimport ruta from \"./url.js\"\nfunction CreateCategory(){\n\n    const [isSend, setSend]= useState(false)\n    const [categorys, setCategorys]= useState([])\n    const [loading, setLoading]=useState(false)\n\n    const [initialValues, setInitialValues] = useState({\n       nameCategory: \"\"\n    });\n    useEffect(() => {\n      setLoading(true)\n      axios.get('http://'+ruta+'/api/categories/')\n      .then((response) => {\n        setLoading(false)\n        setCategorys(response.data)\n      });\n    },[]);\n\n    \n      const onSubmit = async(values, { resetForm }) => {\n   \n        console.log(JSON.stringify(values));\n        setLoading(true)\n        \n        setTimeout(() => {\n          resetForm(initialValues);\n        }, 600);\n        await axios\n        .post(\"http://\"+ruta+\"/api/categories/create/\",values)\n        .then((res) => {\n          setSend(true)\n          setLoading(false)\n          console.log(\"%c response \", \"background: #222; color: #bada55\");\n          console.table(res.data);\n          axios.get('http://'+ruta+'/api/categories/')\n          .then((response) => {\n            setCategorys(response.data)\n          });\n        })\n       .catch((err) => console.log(err)) \n      \n      \n      }\n\n      const formSchema = Yup.object().shape({\n   \n         nameCategory: Yup.string()\n            .trim()\n            .required(\"Required field\")\n            .min(2, \"Minimum of 2 characters\")\n            .matches(\n              /^([A-Z,a-z.'-])+/g,\n              \"Must contain only letters and these symbols , . '   - \"\n            ),\n            \n      });\n    \n    const mostrarAlerta = () => {\n        if (isSend) {\n            return (\n              <UncontrolledAlert color=\"success\" toggle={()=>setSend(false)} >\n              <span>\n                <b>Successfully created</b>\n              </span>\n            </UncontrolledAlert>\n            )\n        }\n        \n    }\n    return(\n        <>\n        <div className=\"content\">\n            <Card >\n              <h3 className=\"title pl-md-4 py-2\">Create Category</h3>\n              <Formik\n                  initialValues={initialValues}\n                  validationSchema={formSchema}\n                  onSubmit={(values, { resetForm }) => onSubmit(values, { resetForm })}\n                > \n                <Form  > \n                  <CardBody >\n                    <Container className=\"d-flex justify-content-center align-items-center\">\n                      <Col >\n                    \n                        <FormGroup>\n                            <label>Category name</label>\n                            <Field\n                            className=\"form-control\"\n                              placeholder=\"Type the category name\"\n                              type=\"text\"\n                              name=\"nameCategory\"\n                              />\n                              <ErrorMessage\n                                      name=\"nameCategory\"\n                                      component=\"div\"\n                                      className=\"field-error text-danger\"\n                                    />\n                        </FormGroup>\n                      </Col>\n                    </Container>   \n                  </CardBody>\n                  <CardFooter className=\"text-center\">\n                    <Button \n                      className=\"btn-fill\" \n                      color=\"primary\" \n                      color=\"info\"\n                      type=\"submit\"\n                    >\n                    Create\n                    </Button>\n                  </CardFooter>\n                </Form>\n             </Formik>\n             {mostrarAlerta()}\n             <h3 className=\"title pl-md-4 py-2\">Categorys</h3>\n             <Container className=\"text-center\">\n               {\n                 loading ? \n                 <div className=\"spinner\"></div>:\n                    <Table responsive>\n                    <thead >\n                        <tr>\n                          <th>Code</th>\n                          <th>Nombre</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {categorys.map((category, i) => {\n                          return (\n                            <tr key={i}>\n                              <td>{category.codeCategory}</td>\n                              <td>{category.nameCategory}</td>\n                              <td>\n                                <Button\n                                type=\"button\"\n                               \n                                 color=\"warning\"\n                                 className=\"fa fa-cog\"\n                               >{\" \"}Edit</Button>\n                              </td>\n                            </tr>\n                          );\n                          })}\n                      </tbody>\n                    </Table>\n               }\n                \n                </Container> \n               \n           </Card>\n          \n       \n        \n       </div>\n      </>\n    );\n\n  }\n\n  export default CreateCategory;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ruta from \"./url.js\"\nimport './spinner.css'\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Button,\n  Col,\n} from \"reactstrap\";\n\nfunction Clients() {\n  const [loading, setLoading]=useState(false)\n  const [productList, setProdcutList] = useState([\n    {\n      codeProduct: \"-\",\n      categoryProduct: {\n        codeCategory: \"-\",\n        nameCategory: \"-\",\n\n      },\n      nameProduct: \"-\",\n      descriptionProduct: \"-\",\n      priceProduct: \"-\"\n    },\n  ]);\n\n  useEffect(() => {\n    setLoading(true)\n    axios\n      .get('http://'+ruta+'/api/products/')\n      .then(\n       \n        (res) => { setLoading(false)\n          setProdcutList(res.data) } \n      )\n      .catch((err) => console.log(err));\n  }, []);\n\n\n  return (\n    <>\n      <div className=\"content\">\n       \n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Products</CardTitle>\n              </CardHeader>\n              <CardBody>\n              {console.log(productList)}\n              {loading ? \n           <div className=\"spinner\"></div>:\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Code</th>\n                      <th>Category</th>\n                      <th>Nombre</th>\n                      <th>Description</th>\n                      <th>Price</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {productList.map((product, i) => {\n                         \n                      return (\n                    \n                        <tr key={i}>\n                          <td>{product.codeProduct}</td>\n                          \n                          <td>{product.categoryProduct.nameCategory}</td>\n                          <td>{product.nameProduct}</td>\n                          <td>{product.descriptionProduct}</td>\n                          <td>{product.priceProduct}</td>\n                          <td>\n                       <Button\n                         type=\"button\"\n                         color=\"warning\"\n                         className=\"fa fa-cog\"\n                      >{\" \"}Edit</Button>\n                     </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n                }\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Clients;\n","import React , { useState,useEffect }from 'react'\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport axios from \"axios\";\nimport {\n    Card,Table,Col, Row, CardBody,\n    CardFooter, Input,FormGroup, Label,FormText, Button,UncontrolledAlert,Alert,Container\n  } from 'reactstrap';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport ruta from \"./url.js\"\n\nimport \"./createProduct.css\";\nimport './spinner.css'\nfunction CreateProduct1(){\n\n    const [isSend, setSend]= useState(false)\n    const [isSelected, setSelected]= useState(false)\n    const [loading, setLoading]=useState(false)\n    const [initialValues, setInitialValues] = useState({\n        nameProduct: \"\",\n        priceProduct: \"\",\n        descriptionProduct: \"\"\n    });\n    const [categorys, setCategorys]= useState([])\n    const [ingredients, setIngredients]= useState([])\n    const [ingredientChoosed, setIngredientsChoosed]=useState([])\n    const [categoryChoosed, setCategoryChoosed]= useState(1)\n    const [image,setImage] = useState({\n      image: [],\n      size: 0,\n    })   \n\n    useEffect(() => {\n      axios.get('http://'+ruta+'/api/categories/')\n      .then((response) => {\n        setCategorys(response.data)\n      });\n      axios.get('http://'+ruta+'/api/ingredients/')\n      .then((response) => {\n        setIngredients(response.data)\n      });\n    },[]);\n\n    const selectFiles = (event) => {\n      let images = event.target.files.item(0);\n      if(images!=null){\n       let correct=images.name.match(/\\.(jpg|jpeg|png|gif)$/)\n       if(!(correct===null)){\n         setImage({image: images,size: 1})\n         setSelected(true)\n       }else{\n         setImage({image: \"\",size: 0})\n       } \n      }     \n    }\n\n    const deleteImage = (e) =>{\n      setImage({image: \"\",size: 0})\n      setSelected(false)\n     \n    }\n    const onSelect=(selectedList, selectedItem)=> {\n    \n      setIngredientsChoosed(selectedList)\n    }\n\n    const onRemove=(selectedList, removedItem)=> {\n      setIngredientsChoosed(selectedList)\n    }\n\n    \n    const onSubmit = async(values, { resetForm }) => {\n   \n        \n      values.categoryProduct=categoryChoosed\n\n      let data= new FormData();\n      for ( var key in values ) {\n        data.append(key, values[key]);\n        console.log(key)\n        console.log(data.getAll(key))\n      }\n      for (var i=0; i<ingredientChoosed.length; i++){\n        console.log(ingredientChoosed[i].codeIngredient)\n        data.append(\"ingredientProduct\", ingredientChoosed[i].codeIngredient)\n      }\n        \n    \n\n        const config = {\n          headers: {\n              'content-type': \"multipart/form-data; boundary=---011000010111000001101001\"\n          }\n        };\n        data.append(\"imageProduct\",image.image)\n       /*\n        setTimeout(() => {\n          resetForm(initialValues);\n        }, 600);*/\n        setLoading(true)\n        await axios.post('http://'+ruta+'/api/products/create/',data, config)\n               .then((res) => {\n                 setSend(true)\n                 setLoading(false)\n                 console.log(\"%c response \", \"background: #222; color: #bada55\");\n                 console.table(res.data); \n                })\n                .catch((err) => console.log(err)) \n       \n      }\n\n      const formSchema = Yup.object().shape({\n   \n        nameProduct: Yup.string()\n            .trim()\n            .required(\"Required field\")\n            .min(2, \"Minimum of 2 characters\")\n            .matches(\n              /^([A-Z,a-z.'-])+/g,\n              \"Must contain only letters and these symbols , . '   - \"\n            ),\n        descriptionProduct: Yup.string()\n            .trim()\n            .required(\"Required field\"),\n        priceProduct: Yup.string()\n            .trim()\n            .required(\"Required field\")\n            .min(1, \"Minimum of 1 characters\")\n            .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"), \n            \n      });\n    \n    const mostrarAlerta = () => {\n        if (isSend) {\n            return (\n              <UncontrolledAlert color=\"success\">\n              <span>\n                <b>Successfully created</b>\n              </span>\n            </UncontrolledAlert>\n            )\n        }\n        \n    }\n    return(\n        <>\n        <div className=\"content\">\n        \n            <Card >\n              \n              <Formik\n                 initialValues={initialValues}\n                 validationSchema={formSchema}\n                 onSubmit={(values, { resetForm }) => onSubmit(values, { resetForm })}\n              > \n              <Form  >  \n              <h3 className=\"title pl-md-4 py-2\">Product</h3>\n              <CardBody >\n                <Container className=\"d-flex justify-content-center align-items-center\">\n                  <Row> \n                    <Col >\n                    <div id=\"img-container\">\n                        <br/>\n                        {\n                        isSelected ?\n                        \n                        null\n                         :  \n                         <>\n                         <Label id=\"load-img-button\" for=\"selectFile\">\n                            Cargar imagen\n                            <i className=\"fas fa-upload\"></i>\n                        </Label>\n                        <Input type=\"file\" name=\"file\" onChange={(e)=>selectFiles(e)}\n                        id=\"selectFile\" multiple/> </>\n                      }\n\n                        <FormText color=\"muted\">\n                            {image.size ? \n                            ` ${image.size} valid image has been selected` :\n                            \"(1 maximum image). No image has been selected\"}\n                        </FormText>\n\n                        {image.size ? \n                          <div className=\"img-ctn\">                                    \n                            <button type=\"button\" value={1} \n                            className=\"fa fa-times img-delete\" \n                            onClick={(e)=>deleteImage(e)}/>\n                            <img alt=\"\"  \n                                src={ URL.createObjectURL(image.image)}/>\n                          </div>:\n                            null\n                        }\n                      </div>\n                    </Col>\n                    <Col >\n                      <FormGroup>\n                      <label>Product name</label>\n                      <Field\n                          className=\"form-control\"\n                          placeholder=\"Type the product name\"\n                          type=\"text\"\n                          name=\"nameProduct\"\n                        />\n                        <ErrorMessage\n                          name=\"nameProduct\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                      </FormGroup>\n                      <label>Category</label>\n                      <Input \n                        type=\"select\" \n                        name=\"select\" \n                        id=\"exampleSelect\" \n                        onChange={(e)=>setCategoryChoosed(e.target.value)}\n                        >\n                        {categorys.map((category, i) => {\n                          return (\n                          <option key={i} value={category.codeCategory} >{category.nameCategory}</option>\n                          );\n                        })}\n                        \n                      </Input>\n                      <FormGroup>\n                      <label>Ingredients</label>\n                      <Multiselect \n                        options={ingredients} \n                        onSelect={onSelect}\n                        onRemove={onRemove}\n                        displayValue='nameIngredient'\n                      />\n                      </FormGroup>\n                  \n                      <FormGroup>\n                      <label>Price</label>\n                      <Field\n                          className=\"form-control\"\n                          placeholder=\"Type the product price\"\n                          type=\"text\"\n                          name=\"priceProduct\"\n                      />\n                      <ErrorMessage\n                          name=\"priceProduct\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                      />\n                      </FormGroup>\n                      <label> Description</label>\n                      <FormGroup>\n                       < Field \n                          component=\"textarea\"  \n                          placeholder=\"Type the product description\"  \n                          name=\"descriptionProduct\" \n                        />\n                        <ErrorMessage\n                          name=\"descriptionProduct\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                      </FormGroup>\n                  \n                    </Col>\n                  </Row>\n                </Container>   \n              </CardBody>\n           \n              <CardFooter className=\"text-center\">\n               <Button \n                 className=\"btn-fill\" \n                 color=\"primary\" \n                 color=\"info\"\n                 type=\"submit\"\n               >\n               Create\n               </Button>\n              </CardFooter> \n            </Form>\n            </Formik>\n            {loading ? \n                 <div className=\"spinner\"></div>:null\n            }\n          </Card>\n         \n        {mostrarAlerta()}\n        </div>\n      </>\n    );\n\n  }\n\n  export default CreateProduct1;","import React , { useState,useEffect }from 'react'\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport axios from \"axios\";\nimport {\n    Card,Table,Col, Row, CardBody,\n    CardFooter, Input,FormGroup, Label,FormText, Button,UncontrolledAlert,Alert,Container\n  } from 'reactstrap';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport ruta from \"./url.js\"\n\nimport \"./createProduct.css\";\nfunction CreateCombo(){\n\n    const [isSend, setSend]= useState(false)\n    const [isSelected, setSelected]= useState(false)\n    const [initialValues, setInitialValues] = useState({\n        nameCombo: \"\",\n        descriptionCombo: \"\",\n        discountCombo: \"\"\n    });\n    const [loading, setLoading]=useState(false)\n    const [products, setproducts]= useState([])\n    const [productsChoosed, setproductsChoosed]=useState([])\n   \n    const [image,setImage] = useState({\n      image: [],\n      size: 0,\n    })   \n\n    useEffect(() => {\n   \n      axios.get('http://'+ruta+'/api/products/')\n      .then((response) => {\n        setproducts(response.data)\n      });\n    },[]);\n\n    const selectFiles = (event) => {\n      let images = event.target.files.item(0);\n      if(images!=null){\n       let correct=images.name.match(/\\.(jpg|jpeg|png|gif)$/)\n       if(!(correct===null)){\n         setImage({image: images,size: 1})\n         setSelected(true)\n       }else{\n         setImage({image: \"\",size: 0})\n       } \n      }     \n    }\n\n    const deleteImage = (e) =>{\n      setImage({image: \"\",size: 0})\n      setSelected(false)\n     \n    }\n    const onSelect=(selectedList, selectedItem)=> {\n    \n      setproductsChoosed(selectedList)\n    }\n\n    const onRemove=(selectedList, removedItem)=> {\n      setproductsChoosed(selectedList)\n    }\n\n    \n    const onSubmit = async(values, { resetForm }) => {\n   \n        \n        //values.productCombo=combo\n        let data= new FormData();\n        for ( var key in values ) {\n          data.append(key, values[key]);\n          console.log(key)\n          console.log(data.getAll(key))\n        }\n        for (var i=0; i<productsChoosed.length; i++){\n          console.log(productsChoosed[i].codeProduct)\n          data.append(\"productCombo\",productsChoosed[i].codeProduct)\n        }\n       \n      \n        data.append(\"imageCombo\",image.image)\n        \n\n        const config = {\n          headers: {\n              'content-type': \"multipart/form-data; boundary=---011000010111000001101001\"\n          }\n        };\n        setLoading(true)\n        await axios\n            .post('http://'+ruta+'/api/combos/create/',data, config)\n            .then((res) => {\n             setSend(true)\n             setLoading(false)\n             console.log(\"%c response \", \"background: #222; color: #bada55\");\n             console.table(res.data); \n             })\n       .catch((err) => console.log(err))           \n      }\n\n      const formSchema = Yup.object().shape({\n   \n        nameCombo: Yup.string()\n            .trim()\n            .required(\"Required field\")\n            .min(2, \"Minimum of 2 characters\")\n            .matches(\n              /^([A-Z,a-z.'-])+/g,\n              \"Must contain only letters and these symbols , . '   - \"\n            ),\n        descriptionCombo: Yup.string()\n            .trim()\n            .required(\"Required field\"),\n        discountCombo: Yup.string()\n            .trim()\n            .required(\"Required field\")\n            .min(1, \"Minimum of 1 characters\")\n            .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"), \n            \n      });\n    \n    const mostrarAlerta = () => {\n        if (isSend) {\n            return (\n              <UncontrolledAlert color=\"success\">\n              <span>\n                <b>Successfully created</b>\n              </span>\n            </UncontrolledAlert>\n            )\n        }\n        \n    }\n    return(\n        <>\n        <div className=\"content\">\n        \n            <Card >\n              \n              <Formik\n                 initialValues={initialValues}\n                 validationSchema={formSchema}\n                 onSubmit={(values, { resetForm }) => onSubmit(values, { resetForm })}\n              > \n              <Form  >  \n              <h3 className=\"title pl-md-4 py-2\">Combo</h3>\n              <CardBody >\n                <Container className=\"d-flex justify-content-center align-items-center\">\n                  <Row> \n                    <Col >\n                    <div id=\"img-container\">\n                        <br/>\n                        {\n                        isSelected ?\n                        \n                        null\n                         :  \n                         <>\n                         <Label id=\"load-img-button\" for=\"selectFile\">\n                            Cargar imagen\n                            <i className=\"fas fa-upload\"></i>\n                        </Label>\n                        <Input type=\"file\" name=\"file\" onChange={(e)=>selectFiles(e)}\n                        id=\"selectFile\" multiple/> </>\n                      }\n\n                        <FormText color=\"muted\">\n                            {image.size ? \n                            ` ${image.size} valid image has been selected` :\n                            \"(1 maximum image). No image has been selected\"}\n                        </FormText>\n\n                        {image.size ? \n                          <div className=\"img-ctn\">                                    \n                            <button type=\"button\" value={1} \n                            className=\"fa fa-times img-delete\" \n                            onClick={(e)=>deleteImage(e)}/>\n                            <img alt=\"\"  \n                                src={ URL.createObjectURL(image.image)}/>\n                          </div>:\n                            null\n                        }\n                      </div>\n                    </Col>\n                    <Col >\n                      <FormGroup>\n                      <label>Combo name</label>\n                      <Field\n                          className=\"form-control\"\n                          placeholder=\"Type the combo name\"\n                          type=\"text\"\n                          name=\"nameCombo\"\n                        />\n                        <ErrorMessage\n                          name=\"nameCombo\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                     \n                      <label>products</label>\n                      <Multiselect \n                        options={products} \n                        onSelect={onSelect}\n                        onRemove={onRemove}\n                        displayValue='nameProduct'\n                      />\n                      </FormGroup>\n                  \n                      <FormGroup>\n                      <label>Discount</label>\n                      <Field\n                          className=\"form-control\"\n                          placeholder=\"Type the discount\"\n                          type=\"text\"\n                          name=\"discountCombo\"\n                      />\n                      <ErrorMessage\n                          name=\"discountCombo\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                      />\n                      </FormGroup>\n                      <label> Description</label>\n                      <FormGroup>\n                       < Field \n                          component=\"textarea\"  \n                          placeholder=\"Type the combo description\"  \n                          name=\"descriptionCombo\" \n                        />\n                        <ErrorMessage\n                          name=\"descriptionCombo\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                      </FormGroup>\n                  \n                    </Col>\n                  </Row>\n                </Container>   \n              </CardBody>\n           \n              <CardFooter className=\"text-center\">\n               <Button \n                 className=\"btn-fill\" \n                 color=\"primary\" \n                 color=\"info\"\n                 type=\"submit\"\n               >\n               Create\n               </Button>\n              </CardFooter> \n            </Form>\n            </Formik>\n            {loading ? \n                 <div className=\"spinner\"></div>:null\n            }\n          </Card>\n         \n        {mostrarAlerta()}\n        </div>\n      </>\n    );\n\n  }\n\n  export default CreateCombo;","import React , { useState }from 'react'\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { setIn } from 'formik';\n\nfunction CardProduct({product1, setSale}){\n    let product={...product1}\n    const [ingredients, setIngredients]= useState(product.ingredientProduct)\n    const [ingredientChoosed, setIngredientsChoosed]=useState([])\n \n    const onSelect=(selectedList, selectedItem)=> {\n        product['ingredientProduct']=selectedList\n       \n      \n    }\n  \n    const onRemove=(selectedList, removedItem)=> {\n        console.log(selectedList)\n        product['ingredientProduct']=selectedList\n        console.log(product)\n         \n    }\n  \n    return(\n      \n        <div className=\"product\">\n              <div className=\"product-img\">\n                  <img src={product.imageProduct} className=\"App-logo\" alt=\"Producto\" />\n              </div>\n              <div className=\"product-body\">\n                  <p className=\"product-category\">\n                      Category: {product.categoryProduct.nameCategory ===undefined ? null : product.categoryProduct.nameCategory}\n                  </p>\n                  <h3 className=\"product-name\">{product.nameProduct}</h3>\n                  <h4 className=\"product-price\">{product.priceProduct}</h4>  \n                  <p className=\"product-name\">Ingredients</p>\n                  \n                  <Multiselect \n                    options={ingredients}\n                    selectedValues={product.ingredientProduct ===undefined ? \n                      []:product.ingredientProduct.filter(\n                        ingredient=>ingredient.additionalIngredient===false)} \n                    onSelect={onSelect}\n                    onRemove={onRemove}\n                    displayValue='nameIngredient'/>  \n                    <br></br>\n                    <br></br>\n                    <br></br>\n                 \n              </div>\n              <div className=\"add-to-cart\">                \n                  <button \n                    className=\"add-to-cart-btn\" \n                    onClick={\n                        \n                        console.log(product),                        \n                        ()=>setSale(product)\n                    }\n                    ><i className=\"fa fa-shopping-cart\"></i> Elegir</button>\n              </div> \n          </div>\n\n    );\n}\n\nexport default CardProduct","import React, { useState, useEffect } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport CardProduct from \"../CardProduct\"\n// import Footer from \"components/Footer.js\";\nimport axios from \"axios\";\nimport \"./Sale.css\"\n// import \"views/spinner.css\"\nimport ruta from \"../url\"\n\n// reactstrap components\nimport { CardTitle,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Container,\n  Col,\n  Row,\n  UncontrolledAlert,\n } from \"reactstrap\";\n\nexport default function Products(props) {\n  let brokenImage = \"http://karinlifoods.com/wp-content/uploads/2017/09/imagen-no-disponible.jpg\"\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSend, setSend] = useState(false);\n  const [productChoosed, setproductChoosed]= useState([])\n  const [loading, setLoading]=useState(false)\n\n  const toggle = () => setIsOpen(!isOpen);\n  let history = useHistory();\n\n  const [productList, setProdcutList] = useState([\n    {\n      codeProduct: \"-\",\n      categoryProduct: {\n        codeCategory: \"-\",\n        nameCategory: \"-\",\n\n      },\n      nameProduct: \"-\",\n      descriptionProduct: \"-\",\n      priceProduct: \"-\"\n    },\n  ]);\n\n  function sale(product){\n    let tLista = productChoosed;\n                 tLista.push(product);\n    setproductChoosed(tLista)\n    console.log(productChoosed.length)\n  }\n\n\n  useEffect(() => {\n    setLoading(true)\n    axios\n      .get('http://'+ruta+'/api/products/')\n      .then(\n        (res) => {setProdcutList(res.data)  \n        console.log(res.data)\n        setLoading(false)}\n      )\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div>\n          <Container className=\"text-center\">\n        { loading ? \n          <div className=\"spinner\"></div>:\n          productList.map((product, i) => {\n            return (\n              <CardProduct key={i} product1={product} setSale={sale}/>\n            );\n          })\n        }\n          \n       </Container>\n    </div>\n  );\n}\n","import React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nexport default function Order(props) {\n  const products = props.order.filter((item) => item.codeProduct);\n  const combos = props.order.filter((item) => item.codeCombo);\n\n  let priceProducts = 0;\n  let priceCombos = 0;\n  let priceProductsCombos = 0;\n  let taxes = 19 / 100;\n  // let granTotal = 0;\n  let fixed = 0;\n\n  function trimCommas(str) {\n    str = str.join(\"\").replaceAll(\",,\", \", \");\n    if (str[0] === \",\") {\n      return str.slice(1);\n    } else {\n      return str.slice(0, -1);\n    }\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col md=\"12\">\n          <Card>\n            <CardHeader>\n              <CardTitle tag=\"h4\">Order Details</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <Table className=\"order-tablesorter\" responsive>\n                <thead className=\"text-primary\">\n                  <tr>\n                    <th>Code Product</th>\n                    <th>Name Product</th>\n                    <th>Category</th>\n                    <th>Basic Price</th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th className=\"text-right\">Products Price</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {products.map((item, i) => {\n                    priceProducts += item.priceProduct;\n                    return (\n                      <tr key={i}>\n                        <td>{item.codeProduct}</td>\n                        <td>{item.nameProduct}</td>\n                        <td>{item.categoryProduct.nameCategory}</td>\n                        <td>$ {(item.priceProduct).toFixed(fixed)}</td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td className=\"text-right\">$ {(item.priceProduct).toFixed(fixed)}</td>\n                        <td></td>\n                      </tr>\n                    );\n                  })}\n                  <tr>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th className=\"text-right\">$ {priceProducts.toFixed(fixed)}</th>\n                    <th></th>\n                  </tr>\n                </tbody>\n              </Table>\n\n              {/*  */}\n\n              <Table className=\"order-tablesorter\" responsive>\n                <thead className=\"text-primary\">\n                  <tr>\n                    <th>Code Combo</th>\n                    <th>Name Combo</th>\n                    <th>Basic</th>\n                    <th>Basic Price</th>\n                    <th>Discount Combo</th>\n                    <th>Extra</th>\n                    <th>Extra Price</th>\n                    <th className=\"text-right\">Combos Price</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {combos.map((item, i) => {\n                    let discount = item.priceCombo * (item.discountCombo / 100);\n\n                    let basic = item.productCombo.map((product) =>\n                      product.ingredientProduct.length\n                        ? product.ingredientProduct.map((ingredient) =>\n                            ingredient.priceIngredient\n                              ? \"\"\n                              : ingredient.nameIngredient\n                          )\n                        : \"\"\n                    );\n                    basic = trimCommas(basic);\n\n                    let extraPriceItem = 0;\n                    let extra = item.productCombo.map((product) =>\n                      product.ingredientProduct.length\n                        ? product.ingredientProduct.map((ingredient) => {\n                            if (ingredient.priceIngredient) {\n                              extraPriceItem += ingredient.priceIngredient;\n                              return ingredient.nameIngredient;\n                            } else return \"\";\n                          })\n                        : \"\"\n                    );\n                    extra = trimCommas(extra);\n                    let totalComboItem =\n                      item.priceCombo + extraPriceItem - discount;\n                    priceCombos += totalComboItem;\n\n                    priceProductsCombos = priceProducts + priceCombos;\n                    props.setGranTotal(\n                      priceProductsCombos + priceProductsCombos * taxes\n                      )\n\n                    return (\n                      <tr key={i}>\n                        <td>{item.codeCombo}</td>\n                        <td>{item.nameCombo}</td>\n                        <td>{basic}</td>\n                        <td>$ {item.priceCombo.toFixed(fixed)}</td>\n                        <td>-$ {discount.toFixed(fixed)}</td>\n                        <td> {extra}</td>\n                        <td>$ {extraPriceItem.toFixed(fixed)}</td>\n                        <td className=\"text-right\">\n                          $ {totalComboItem.toFixed(fixed)}\n                        </td>\n                        <td></td>\n                      </tr>\n                    );\n                  })}\n                  <tr>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th className=\"text-right\">\n                      $ {priceCombos.toFixed(fixed)}\n                    </th>\n                    <th></th>\n                  </tr>\n                </tbody>\n              </Table>\n\n              {/*  */}\n\n              <Table className=\"order-tablesorter-results\" responsive>\n                <tbody>\n                  <tr>\n                    <th className=\"text-right\">PRICE PRODUCTS AND COMBOS</th>\n                    <th className=\"text-right\">\n                      $ {priceProductsCombos.toFixed(fixed)} {`<`}\n                    </th>\n                  </tr>\n\n                  <tr>\n                    <th className=\"text-right\">TAXES (19%)</th>\n                    <th className=\"text-right\">\n                      $ {(priceProductsCombos * taxes).toFixed(fixed)} {`<`}\n                    </th>\n                  </tr>\n\n                  <tr>\n                    <th className=\"text-right\">TOTAL</th>\n                <th className=\"text-right\">$ {props.granTotal.toFixed(fixed)} {`<`}</th>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n// reactstrap components\nimport { Row, Col, Card, CardBody, FormGroup, Label, Input } from \"reactstrap\";\n\nexport default function Payment(props) {\n  const radioButtonHandler = (event) => {\n    switch (event.target.id) {\n      case \"credit-card\":\n        props.setPayment({\n          creditCard: true,\n          newCreditCard: false,\n          cash: false,\n        });\n        break;\n\n      case \"new-credit-card\":\n        props.setPayment({\n          creditCard: false,\n          newCreditCard: true,\n          cash: false,\n        });\n        break;\n\n      case \"cash\":\n        props.setPayment({\n          creditCard: false,\n          newCreditCard: false,\n          cash: true,\n        });\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col md=\"2\">\n          <Card className=\"payment-card\" />\n        </Col>\n        <Col md=\"8\">\n          <Card\n            outline\n            color=\"info\"\n            className=\"payment-card text-center border rounded\"\n          >\n            <br />\n            <legend>Payment Methods</legend>\n            <CardBody className=\"text-center Card-body-center\">\n              <FormGroup tag=\"fieldset\" onChange={radioButtonHandler}>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      type=\"radio\"\n                      name=\"radio\"\n                      id=\"credit-card\"\n                      defaultChecked={props.payment.creditCard}\n                    />\n                  </Label>\n\n                  <Label>\n                    <h4> Credit Card</h4>\n                  </Label>\n                </FormGroup>\n                <FormGroup check>\n                  <Label check>\n                    <Input\n                      type=\"radio\"\n                      name=\"radio\"\n                      id=\"new-credit-card\"\n                      defaultChecked={props.payment.newCreditCard}\n                    />{\" \"}\n                  </Label>\n                  <Label>\n                    <h4> New Credit Card</h4>\n                  </Label>\n                </FormGroup>\n\n                {window.sessionStorage.getItem(\"userType\") === \"worker\" ? (\n                  <FormGroup check>\n                    <Label check>\n                      <Input\n                        type=\"radio\"\n                        name=\"radio\"\n                        id=\"cash\"\n                        defaultChecked={props.payment.cash}\n                      />\n                    </Label>\n                    <Label>\n                      {\" \"}\n                      <h4> Cash</h4>\n                    </Label>\n                  </FormGroup>\n                ) : null}\n              </FormGroup>\n\n              {props.payment.creditCard && (\n                <Card>\n                  <CardBody>\n                    <b>Security Recommendations:</b> Do not give the card to be\n                    taken to another place to make the transaction; avoid losing\n                    sight of it. The card has an expiration date on it, so be\n                    sure to renew it before that date to avoid problems with its\n                    use.\n                  </CardBody>\n                </Card>\n              )}\n              {props.payment.newCreditCard && (\n                <Card>\n                  <CardBody>\n                    <b>Security Recommendations:</b> For you new Credit card in\n                    the case of payment by installments, it must be ensured who\n                    is providing this benefit and whether it is a payment of the\n                    same cash price divided into installments or whether a\n                    surcharge is made for each installment paid.\n                  </CardBody>\n                </Card>\n              )}\n\n              {props.payment.cash && (\n                <Card>\n                  <CardBody>\n                    <b>Security Recommendations:</b> Remember that the customer\n                    must count very well money before you retire. Any\n                    counterfeit bill will be destroyed and will not constitute\n                    payment of the debt.\n                  </CardBody>\n                </Card>\n              )}\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md=\"2\">\n          <Card className=\"payment-card\" />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport NotificationAlert from \"react-notification-alert\";\nimport { useHistory } from \"react-router-dom\";\n// reactstrap components\nimport {\n  Row,\n  Col,\n  Card,\n  CardFooter,\n  Button,\n  CardBody,\n  FormGroup,\n  CardText,\n} from \"reactstrap\";\n\nexport default function FinishOrder(props) {\n  const notificationAlert = useRef();\n  let history = useHistory();\n  const [disabledFields, setDisabledFields] = useState(false);\n  const [initialValues, setInitialValues] = useState({\n    Name: \"\",\n    LastName: \"\",\n    CreditCard: \"\",\n    paid_until: \"12/11/2020\",\n    CVV: \"\",\n  });\n\n  const [placeHolders, setPlaceHolders] = useState([\n    \"Type your name\",\n    \"Type your last name\",\n    \"Type your credit card number\",\n    \"\",\n    \"CVV\",\n  ]);\n\n  useEffect(() => {\n    if (props.payment.creditCard) {\n      setInitialValues({\n        Name: \"Jem Pool\",\n        LastName: \"Suarez\",\n        CreditCard: \"2342342344\",\n        paid_until: \"12/11/2020\",\n        CVV: \"1234\",\n      });\n      setDisabledFields(true);\n    }\n  }, []);\n\n  //Schema for input data valiation using Yup\n  const formSchema = Yup.object().shape({\n    Name: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n    LastName: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n    CreditCard: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(/^[1-9][0-9]*$/, \"Must be an integer and positive number\"),\n    paid_until: Yup.string().trim().required(\"Required field\"),\n    CVV: Yup.string()\n      .required(\"This field is required\")\n      .min(4, \"Minimum of 4 characters\"),\n  });\n\n  //Function for notification settings\n  const notify = (place, type, message) => {\n    notificationAlert.current.notificationAlert({\n      place: place,\n      type: type, //[\"primary\", \"success\", \"danger\", \"warning\", \"info\"]\n      message: <b>{message}</b>,\n      icon:\n        type === \"success\"\n          ? \"tim-icons icon-check-2\"\n          : \"tim-icons icon-alert-circle-exc\",\n      autoDismiss: 7,\n    });\n  };\n\n  const onSubmit = (values, { resetForm }) => {\n    let user = values;\n\n    let payload = {\n      user: {\n        name: user.Name,\n        surname: user.LastName,\n        credit_card: user.CreditCard,\n      },\n    };\n\n    console.log(payload);\n\n    notify(\"br\", \"success\", \"Successful Payment\");\n    setTimeout(() => {\n      history.push(\"/\");\n    }, 1000);\n  };\n\n  const onSubmitCash = () => {\n    notify(\"br\", \"success\", \"Successful Payment\");\n    setTimeout(() => {\n      history.push(\"/\");\n    }, 1000);\n  };\n\n  // props.payment.creditCard\n  // props.payment.newCreditCard\n  // props.payment.cash\n  // <CardTitle tag=\"h4\">Confirm your order</CardTitle>\n\n  const CreditCardPayments = () => (\n    <Col md=\"8\">\n      <Formik\n        initialValues={initialValues}\n        validationSchema={formSchema}\n        onSubmit={(values, { resetForm }) => onSubmit(values, { resetForm })}\n      >\n        <Form>\n          <Card\n            outline\n            color=\"\"\n            //         payment-card text-center border rounded\n            className=\"payment-card text-center border rounded\"\n          >\n            <br />\n            <h4>{props.payment.creditCard && \"Credit Card Payment\"}</h4>\n            <h4>{props.payment.newCreditCard && \"New Credit Card Payment\"}</h4>\n            <h4>{props.payment.cash && \"Cash Payment\"}</h4>\n\n            <CardBody className=\"text-center Card-body-center\">\n              <Row>\n                <Col md=\"2\" />\n                <Col md=\"8\">\n                  <FormGroup className=\"finish-order-form\">\n                    <label htmlFor=\"Name\">Card Owner Name</label>\n                    <Field\n                      disabled={disabledFields}\n                      className=\"form-control\"\n                      name=\"Name\"\n                      placeholder={placeHolders[0]}\n                    />\n                    <ErrorMessage\n                      name=\"Name\"\n                      component=\"div\"\n                      className=\"field-error text-danger\"\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md=\"2\" />\n              </Row>\n\n              <Row>\n                <Col md=\"2\" />\n                <Col md=\"8\">\n                  <FormGroup>\n                    <label htmlFor=\"LastName\">Card Owner Last Name</label>\n                    <Field\n                      disabled={disabledFields}\n                      className=\"form-control\"\n                      name=\"LastName\"\n                      placeholder={placeHolders[1]}\n                    />\n                    <ErrorMessage\n                      name=\"LastName\"\n                      component=\"div\"\n                      className=\"field-error text-danger\"\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md=\"2\" />\n              </Row>\n\n              <Row>\n                <Col md=\"2\" />\n                <Col md=\"8\">\n                  <FormGroup>\n                    <label htmlFor=\"CreditCard\">Credit Card Number</label>\n                    <Field\n                      disabled={disabledFields}\n                      className=\"form-control\"\n                      name=\"CreditCard\"\n                      placeholder={placeHolders[2]}\n                    />\n                    <ErrorMessage\n                      name=\"CreditCard\"\n                      component=\"div\"\n                      className=\"field-error text-danger\"\n                    />\n                  </FormGroup>\n                </Col>\n\n                <Col md=\"2\" />\n              </Row>\n\n              <Row>\n                <Col md=\"2\" />\n                <Col className=\"pr-md-1\" md=\"5\">\n                  <FormGroup>\n                    <label>Expiration Date</label>\n                    <Field\n                      disabled={disabledFields}\n                      className=\"form-control\"\n                      type={disabledFields ? \"\" : \"date\"}\n                      name=\"paid_until\"\n                      defaultValue={\"12/12/2020\"}\n                    />\n                    <ErrorMessage\n                      name=\"paid_until\"\n                      component=\"div\"\n                      className=\"field-error text-danger\"\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md=\"3\">\n                  <FormGroup>\n                    <label htmlFor=\"CVV\">CVV</label>\n                    <Field\n                      disabled={disabledFields}\n                      className=\"form-control\"\n                      type=\"password\"\n                      name=\"CVV\"\n                      placeholder={placeHolders[4]}\n                    />\n                    <ErrorMessage\n                      name=\"CVV\"\n                      component=\"div\"\n                      className=\"field-error text-danger\"\n                    />\n                  </FormGroup>\n                </Col>\n\n                <Col md=\"2\" />\n              </Row>\n\n              <Row>\n                <Col md=\"2\" />\n                <Col md=\"8\">\n                  <br />\n                  <CardText>\n                    When you click on the <b>Confirm</b> button you will proceed\n                    to consolidate the payment of your product invoice for a\n                    total\n                    <h4>\n                      <br /> <b>$ {props.granTotal.toFixed(2)}</b>\n                    </h4>{\" \"}\n                    Thank you for using our services, any questions, concerns or\n                    complaints may be made to our support email{\" \"}\n                    <a href=\"url\">helpdesk@hyperfoods.com</a>\n                  </CardText>\n                </Col>\n                <Col md=\"2\" />\n              </Row>\n            </CardBody>\n            <CardFooter>\n              <Button\n                className=\"btn-confirm btn-fill\"\n                size=\"sm\"\n                color=\"info\"\n                onSubmit={() => {}}\n              >\n                Confirm\n              </Button>\n            </CardFooter>\n          </Card>\n        </Form>\n      </Formik>\n    </Col>\n  );\n\n  const Cash = () => (\n    <Card\n      outline\n      color=\"\"\n      //         payment-card text-center border rounded\n      className=\"payment-card text-center border rounded\"\n    >\n      <CardBody className=\"text-center Card-body-center\">\n        <Row>\n          <Col md=\"2\" />\n          <Col md=\"8\">\n            <CardText>\n              When you click on the <b>Confirm</b> button you will proceed to\n              consolidate the payment of your product invoice for a total of{\" \"}\n              <h4>\n                {\" \"}\n                <b>$ {props.granTotal.toFixed(2)}</b>\n              </h4>{\" \"}\n              Thank you for using our services, any questions, concerns or\n              complaints may be made to our support email{\" \"}\n              <a href=\"url\">helpdesk@hyperfoods.com</a>\n            </CardText>\n          </Col>\n          <Col md=\"2\" />\n        </Row>\n      </CardBody>\n\n      <CardFooter>\n        <Button\n          className=\"btn-confirm btn-fill\"\n          size=\"sm\"\n          color=\"info\"\n          onClick={onSubmitCash}\n        >\n          Confirm\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n\n  return (\n    <div>\n      <div className=\"react-notification-alert-container\">\n        <NotificationAlert ref={notificationAlert} />\n      </div>\n      <Row>\n        <Col md=\"2\">\n          <Card className=\"payment-card\" />\n        </Col>\n\n        {props.payment.creditCard || props.payment.newCreditCard ? (\n          <CreditCardPayments />\n        ) : (\n          <Cash />\n        )}\n\n        <Col md=\"2\">\n          <Card className=\"payment-card\" />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Button,\n} from \"reactstrap\";\nimport Stepper from \"react-stepper-horizontal\";\nimport \"./Sales.css\";\n\n// Import steps views &nbsp;\nimport Products from \"./Products\"; // [1] Food List\nimport Order from \"./Order\"; // [2] Order\nimport Payment from \"./Payment\"; // [3] Payment\nimport FinishOrder from \"./FinishOrder\"; // [4] Finish Order\n\n// Listar Productos -> http://tenant1.hyperfoods.team/api/products/\n\n// Listar Combos -> http://tenant1.hyperfoods.team/api/combos/\nconst combos = [\n  {\n    codeCombo: 1,\n    productCombo: [\n      {\n        codeProduct: 1,\n        categoryProduct: {\n          codeCategory: 1,\n          nameCategory: \"Bebidas\",\n        },\n        ingredientProduct: [],\n        nameProduct: \"Limonada\",\n        descriptionProduct: \"Agua, Limón y Azúcar\",\n        priceProduct: 2500,\n      },\n      {\n        codeProduct: 2,\n        categoryProduct: {\n          codeCategory: 2,\n          nameCategory: \"Hamburguesas\",\n        },\n        ingredientProduct: [\n          {\n            codeIngredient: 1,\n            nameIngredient: \"Cebolla\",\n            priceIngredient: 0,\n            additionalIngredient: false,\n          },\n          {\n            codeIngredient: 2,\n            nameIngredient: \"Tocineta\",\n            priceIngredient: 3500,\n            additionalIngredient: true,\n          },\n          {\n            codeIngredient: 3,\n            nameIngredient: \"Queso\",\n            priceIngredient: 0,\n            additionalIngredient: false,\n          },\n          {\n            codeIngredient: 4,\n            nameIngredient: \"Queso\",\n            priceIngredient: 2000,\n            additionalIngredient: true,\n          },\n        ],\n        nameProduct: \"Perro Caliente\",\n        descriptionProduct: \"Queso y Tocino\",\n        priceProduct: 8000,\n      },\n    ],\n    nameCombo: \"Personal 1\",\n    descriptionCombo: \"Hamburguesa + Limonada\",\n    discountCombo: 15,\n    priceCombo: 14875,\n  },\n  {\n    codeCombo: 2,\n    productCombo: [\n      {\n        codeProduct: 1,\n        categoryProduct: {\n          codeCategory: 1,\n          nameCategory: \"Bebidas\",\n        },\n        ingredientProduct: [],\n        nameProduct: \"Limonada\",\n        descriptionProduct: \"Agua, Limón y Azúcar\",\n        priceProduct: 2500,\n      },\n      {\n        codeProduct: 2,\n        categoryProduct: {\n          codeCategory: 2,\n          nameCategory: \"Perro Caliente\",\n        },\n        ingredientProduct: [\n          {\n            codeIngredient: 1,\n            nameIngredient: \"Cebolla\",\n            priceIngredient: 0,\n            additionalIngredient: false,\n          },\n          {\n            codeIngredient: 2,\n            nameIngredient: \"Tocino\",\n            priceIngredient: 3500,\n            additionalIngredient: true,\n          },\n          {\n            codeIngredient: 3,\n            nameIngredient: \"Queso\",\n            priceIngredient: 0,\n            additionalIngredient: false,\n          },\n          {\n            codeIngredient: 4,\n            nameIngredient: \"Queso\",\n            priceIngredient: 2000,\n            additionalIngredient: true,\n          },\n        ],\n        nameProduct: \"Perro Caliente\",\n        descriptionProduct: \"Queso y Tocino\",\n        priceProduct: 8000,\n      },\n    ],\n    nameCombo: \"Personal 2\",\n    descriptionCombo: \"Hamburguesa + Limonada\",\n    discountCombo: 10,\n    priceCombo: 17875,\n  },\n];\n\nconst products = [\n  {\n    codeProduct: 1,\n    categoryProduct: {\n      codeCategory: 1,\n      nameCategory: \"Bebidas\",\n    },\n    ingredientProduct: [],\n    nameProduct: \"Limonada\",\n    descriptionProduct: \"Agua, Limón y Azúcar\",\n    priceProduct: 2000,\n  },\n  {\n    codeProduct: 2,\n    categoryProduct: {\n      codeCategory: 2,\n      nameCategory: \"Hamburguesas\",\n    },\n    ingredientProduct: [\n      {\n        codeIngredient: 1,\n        nameIngredient: \"Cebolla\",\n        priceIngredient: 0,\n        additionalIngredient: false,\n      },\n      {\n        codeIngredient: 2,\n        nameIngredient: \"Tocineta\",\n        priceIngredient: 3500,\n        additionalIngredient: true,\n      },\n      {\n        codeIngredient: 3,\n        nameIngredient: \"Queso\",\n        priceIngredient: 0,\n        additionalIngredient: false,\n      },\n      {\n        codeIngredient: 4,\n        nameIngredient: \"Queso\",\n        priceIngredient: 2000,\n        additionalIngredient: true,\n      },\n    ],\n    nameProduct: \"Perro Caliente\",\n    descriptionProduct: \"Queso y Tocino\",\n    priceProduct: 8000,\n  },\n];\n\nfunction Sales() {\n  const [activeStep, setActiveStep] = useState(0);\n  const order = [...products, ...combos];\n\n  const nextStep = () => {\n    if (activeStep < 3) {\n      setActiveStep(activeStep + 1);\n    }\n  };\n\n  const previousStep = () => {\n    if (activeStep > 0) {\n      setActiveStep(activeStep - 1);\n    }\n  };\n\n  // Payment method\n  const [payment, setPayment] = useState({\n    creditCard: false,\n    newCreditCard: false,\n    cash: false,\n  });\n\n  // Price of the order\n  const [granTotal, setGranTotal] = useState(0);\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Sales</CardTitle>\n                <div className=\"stepper-head\">\n                  <Stepper\n                    className=\"stepper\"\n                    steps={[\n                      { title: \"Food List\" },\n                      { title: \"Order\" },\n                      { title: \"Payment\" },\n                      { title: \"Finish Order\" }, // Options: Cancel Order, back to Payment\n                    ]}\n                    activeStep={activeStep}\n                    lineMarginOffset={8}\n                  />\n                </div>\n                <div className=\"order-buttons\">\n                  {activeStep > 0 ? (\n                    <Button\n                      className=\"btn-sales btn-fill\"\n                      size=\"sm\"\n                      color=\"info\"\n                      onClick={() => previousStep()}\n                    >\n                      Return\n                    </Button>\n                  ) : null}\n                  {activeStep < 3 ? (\n                    <Button\n                      disabled={\n                        !payment.creditCard &&\n                        !payment.newCreditCard &&\n                        !payment.cash &&\n                        activeStep > 1\n                      }\n                      className=\"btn-sales btn-fill\"\n                      size=\"sm\"\n                      color=\"info\"\n                      onClick={() => nextStep()}\n                    >\n                      Next\n                    </Button>\n                  ) : null}{\" \"}\n                </div>\n              </CardHeader>\n            </Card>\n          </Col>\n\n          <Col md=\"12\">\n            <div className=\"stepper-body\">\n              <Card>\n                <CardBody>\n                  {activeStep === 0 ? <Products nextStep={nextStep} /> : null}\n                  {activeStep === 1 ? (\n                    <Order\n                      nextStep={nextStep}\n                      previousStep={previousStep}\n                      order={order}\n                      granTotal={granTotal}\n                      setGranTotal={setGranTotal}\n                    />\n                  ) : null}\n                  {activeStep === 2 ? (\n                    <Payment\n                      nextStep={nextStep}\n                      previousStep={previousStep}\n                      payment={payment}\n                      setPayment={setPayment}\n                    />\n                  ) : null}\n                  {activeStep === 3 ? (\n                    <FinishOrder\n                      previousStep={previousStep}\n                      payment={payment}\n                      granTotal={granTotal}\n                    />\n                  ) : null}\n                </CardBody>\n              </Card>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Sales;\n","/* eslint-disable */\n// Added views\nimport ListWorkers from \"views/ListWorkers.js\";\nimport CreateWorker from \"views/CreateWorker.js\";\nimport ListClients from \"views/ListClients.js\";\nimport CreateClient from \"views/CreateClient.js\";\n\n// Template views\n// import Dashboard from \"views/Dashboard.js\";\n// import Icons from \"views/Icons.js\";\n// import Map from \"views/Map.js\";\n// import Notifications from \"views/Notifications.js\";\n// import TableList from \"views/TableList.js\";\n// import Typography from \"views/Typography.js\";\n// import UserProfile from \"views/UserProfile.js\";\n// import CreateTenant from \"views/CreateTenat.js\"\nimport CreateIngredient from \"views/CreateIngredient.js\";\nimport CreateCategory from \"views/CreateCategory.js\";\nimport Product from \"views/ListProduct.js\";\nimport ProductCreate from \"views/CreateProduct1.js\";\nimport CreateCombo from \"views/CreateCombo.js\";\n\nimport Sales from \"./views/Sales/Sales\";\n\nexport default function availableRoutes() {\n  const routesUsers = [\n    {\n      path: \"/list-workers\",\n      name: \"List Workers\",\n      icon: \"tim-icons icon-badge\",\n      component: ListWorkers,\n      layout: \"/admin\",\n    },\n    {\n      path: \"/create-worker\",\n      name: \"Create Worker\",\n      icon: \"tim-icons icon-single-copy-04\",\n      component: CreateWorker,\n      layout: \"/admin\",\n    },\n    {\n      path: \"/list-clients\",\n      name: \"List Clients\",\n      icon: \"tim-icons icon-bullet-list-67\",\n      component: ListClients,\n      layout: \"/admin\",\n    },\n    {\n      path: \"/create-client\",\n      name: \"Create Client\",\n      icon: \"tim-icons icon-single-02\",\n      component: CreateClient,\n      layout: \"/admin\",\n    },\n    // {\n    //   path: \"/create-tenant\",\n    //   name: \"Create Tenant\",\n    //   icon: \"tim-icons icon-chart-pie-36\",\n    //   component: CreateTenant,\n    //   layout: \"/admin\"\n    // },\n    {\n      path: \"/category\",\n      name: \"Create category\",\n      icon: \"tim-icons icon-single-copy-04\",\n      component: CreateCategory,\n      layout: \"/admin\",\n    },\n    {\n      path: \"/ingredient\",\n      name: \"Create Ingredient\",\n      icon: \"tim-icons icon-single-copy-04\",\n      component: CreateIngredient,\n      layout: \"/admin\",\n    },\n    {\n      path: \"/productl\",\n      name: \"Product list\",\n      icon: \"tim-icons icon-bullet-list-67\",\n      component: Product,\n      layout: \"/admin\",\n    },\n    {\n      path: \"/product\",\n      name: \"Create product\",\n      icon: \"tim-icons icon-single-copy-04\",\n      component: ProductCreate,\n      layout: \"/admin\",\n    },\n    {\n      path: \"/combo\",\n      name: \"Create Combo\",\n      icon: \"tim-icons icon-single-copy-04\",\n      component: CreateCombo,\n      layout: \"/admin\",\n    },\n    {\n      path: \"/sales\",\n      name: \"Sale\",\n      icon: \"tim-icons icon-single-copy-04\",\n      component: Sales,\n      layout: \"/admin\",\n    },\n    // Template views\n    // {\n    //   path: \"/dashboard\",\n    //   name: \"Dashboard\",\n    //   icon: \"tim-icons icon-chart-pie-36\",\n    //   component: Dashboard,\n    //   layout: \"/admin\"\n    // },\n    // {\n    //   path: \"/icons\",\n    //   name: \"Icons\",\n    //   icon: \"tim-icons icon-atom\",\n    //   component: Icons,\n    //   layout: \"/admin\"\n    // },\n    // {\n    //   path: \"/map\",\n    //   name: \"Map\",\n    //   icon: \"tim-icons icon-pin\",\n    //   component: Map,\n    //   layout: \"/admin\"\n    // },\n    // {\n    //   path: \"/notifications\",\n    //   name: \"Notifications\",\n    //   icon: \"tim-icons icon-bell-55\",\n    //   component: Notifications,\n    //   layout: \"/admin\"\n    // },\n    // {\n    //   path: \"/user-profile\",\n    //   name: \"User Profile\",\n    //   icon: \"tim-icons icon-single-02\",\n    //   component: UserProfile,\n    //   layout: \"/admin\"\n    // },\n    // {\n    //   path: \"/tables\",\n    //   name: \"Table List\",\n    //   icon: \"tim-icons icon-puzzle-10\",\n    //   component: TableList,\n    //   layout: \"/admin\"\n    // },\n    // {\n    //   path: \"/typography\",\n    //   name: \"Typography\",\n    //   icon: \"tim-icons icon-align-center\",\n    //   component: Typography,\n    //   layout: \"/admin\"\n    // },\n  ];\n  const routesClients = [\n    {\n      path: \"/sales\",\n      name: \"Sale\",\n      icon: \"tim-icons icon-single-copy-04\",\n      component: Sales,\n      layout: \"/admin\",\n    },\n  ];\n\n  switch (window.sessionStorage.getItem(\"userType\")) {\n    case \"client\":\n      return routesClients;\n\n    case \"worker\":\n      return routesUsers;\n  }\n}\n","import { SET_SIDEBAR_OPENED, SET_BGCOLOR, SET_NETWORKSTATUS } from \"../constants.js\";\n\nexport function setSidebarOpened(payload) {\n  return { type: SET_SIDEBAR_OPENED, payload };\n}\n\nexport function setBgColor(payload) {\n  return { type: SET_BGCOLOR, payload };\n}\n\nexport function setNetworkStatus(payload) {\n  return { type: SET_NETWORKSTATUS, payload };\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport availableRoutes from \"routes.js\";\nimport { setSidebarOpened } from \"../redux/Template/actions.js\";\nimport classNames from \"classnames\";\nimport NotificationAlert from \"react-notification-alert\";\nimport \"./AdminNavbar.css\";\n// reactstrap components\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Button,\n} from \"reactstrap\";\n\nfunction AdminNavbar(props) {\n  const [collapseOpen, setCollapseOpen] = useState(false);\n  const [modalSearch, setModalSearch] = useState(false);\n  const [color, setColor] = useState(\"navbar-transparent\");\n  const routes = availableRoutes();\n  const notificationAlert = useRef();\n\n  // Message from service-worker to client\n  const channel = new BroadcastChannel(\"sw-messages\");\n\n  // Message from service-worker to client\n  function notificationFromServiceWorker(event) {\n    if (event.data.response === 201) {\n      notify(\n        \"br\",\n        \"success\",\n        `User registration with email ${event.data.email} was successful`\n      );\n    } else {\n      notify(\n        \"br\",\n        \"danger\",\n        `User with email ${event.data.email} already exist`\n      );\n    }\n  }\n\n  useEffect(\n    () => {\n      if (window.sessionStorage.getItem(\"workers\") != null) {\n        sessionStorage.removeItem(\"workers\");\n      }\n\n      // Message from service-worker to client\n      channel.addEventListener(\"message\", notificationFromServiceWorker);\n\n      //component mounted (ComponentDidMount)\n      window.addEventListener(\"resize\", updateColor);\n\n      // callback at unmount (ComponentWillUnmount)\n      return () => {\n        window.removeEventListener(\"resize\", updateColor);\n      };\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setColor(\"bg-white\");\n    } else {\n      setColor(\"navbar-transparent\");\n    }\n  };\n\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (collapseOpen) {\n      setColor(\"navbar-transparent\");\n    } else {\n      setColor(\"bg-white\");\n    }\n    setCollapseOpen(!collapseOpen);\n  };\n\n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setModalSearch(!modalSearch);\n  };\n\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    props.setSidebarOpened(!props.sidebarOpened);\n  };\n\n  const getBrandText = () => {\n    return routes.filter(\n      (route) => route.layout + route.path === props.history.location.pathname\n    )[0].name;\n    // console.log(routes.map(route=>route.layout + route.path))\n    // console.log(props.history.location.pathname)\n    // return \"Brand\";\n  };\n\n  //Function for notification settings\n  const notify = (place, type, message) => {\n    notificationAlert.current.notificationAlert({\n      place: place,\n      type: type, //[\"primary\", \"success\", \"danger\", \"warning\", \"info\"]\n      message: message,\n      icon:\n        type === \"success\"\n          ? \"tim-icons icon-check-2\"\n          : \"tim-icons icon-alert-circle-exc\",\n      autoDismiss: 7,\n    });\n  };\n\n  return (\n    <>\n      {/* {console.log(JSON.parse(window.sessionStorage.getItem(\"workers\")))} */}\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\n        <div className=\"react-notification-alert-container\">\n          <NotificationAlert ref={notificationAlert} />\n        </div>\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <button\n                className=\"navbar-toggler\"\n                type=\"button\"\n                onClick={toggleSidebar}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand href=\"\" onClick={(e) => e.preventDefault()}>\n              {getBrandText()}\n            </NavbarBrand>\n          </div>\n          <button\n            aria-expanded={false}\n            aria-label=\"Toggle navigation\"\n            className=\"navbar-toggler\"\n            data-target=\"#navigation\"\n            data-toggle=\"collapse\"\n            id=\"navigation\"\n            type=\"button\"\n            onClick={toggleCollapse}\n          >\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </button>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              {props.networkStatus && props.pending.length ? (\n                <Button\n                  onClick={() => {\n                    window.location.reload(false);\n                  }}\n                  className=\"btn-reload\"\n                  color=\"info\"\n                  size=\"sm\"\n                >\n                  <i className=\"tim-icons icon-refresh-02\" /> SYNC\n                  {props.pending.length ? ` (${props.pending.length})` : \"\"}\n                </Button>\n              ) : null}\n              <UncontrolledDropdown nav>\n                <DropdownToggle\n                  // caret\n                  // color=\"default\"\n                  data-toggle=\"dropdown\"\n                  nav\n                >\n                  {props.networkStatus ? (\n                    <div>\n                      <i className=\"tim-icons icon-check-2 icon-online\" />\n                      <p className=\"online-text\">ONLINE</p>\n                    </div>\n                  ) : (\n                    <div>\n                      <i className=\"tim-icons icon-alert-circle-exc icon-offline\" />\n                      <p className=\"offline-text\">OFFLINE</p>\n                    </div>\n                  )}\n                </DropdownToggle>\n              </UncontrolledDropdown>\n              <UncontrolledDropdown nav>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  data-toggle=\"dropdown\"\n                  nav\n                  onClick={(e) => e.preventDefault()}\n                >\n                  <div className=\"photo\">\n                    <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\n                  </div>\n                  <b className=\"caret d-none d-lg-block d-xl-block\" />\n                  <p className=\"d-lg-none\">Log out</p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                  </NavLink>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                  </NavLink>\n                  <DropdownItem divider tag=\"li\" />\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">Log out</DropdownItem>\n                  </NavLink>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n      {/* <Modal\n        modalClassName=\"modal-search\"\n        isOpen={modalSearch}\n        toggle={toggleModalSearch}\n      >\n        <div className=\"modal-header\">\n          <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={toggleModalSearch}\n          >\n            <i className=\"tim-icons icon-simple-remove\" />\n          </button>\n        </div>\n      </Modal> */}\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sidebarOpened: state.templateReducer.templateProps.sidebarOpened,\n    networkStatus: state.templateReducer.templateProps.networkStatus,\n    pending: state.offlineReducer.pending,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSidebarOpened: (state) => dispatch(setSidebarOpened(state)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminNavbar);\n","/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container } from \"reactstrap\";\n\nfunction Footer () {\n  return (\n    <footer className=\"footer\">\n      <Container fluid>\n        <div className=\"copyright\">\n          © {new Date().getFullYear()} made with{\" \"}\n          <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\n          <a\n            href=\"https://www.creative-tim.com/?ref=bdr-user-archive-footer\"\n            target=\"_blank\"\n          >\n            Creative Tim\n          </a>{\" \"}\n          for a better web.\n        </div>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","/*eslint-disable*/\nimport React, { useEffect, useRef } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setSidebarOpened } from \"../redux/Template/actions.js\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav } from \"reactstrap\";\nimport availableRoutes from \"../routes.js\";\n\nvar ps;\n\nfunction Sidebar(props) {\n  const sidebar = useRef();\n  const routes = availableRoutes();\n\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n\n  useEffect(\n    () => {\n      // component mounted (ComponentDidMount)\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps = new PerfectScrollbar(sidebar, {\n          suppressScrollX: true,\n          suppressScrollY: false,\n        });\n      }\n      // callback at unmount (ComponentWillUnmount)\n      return () => {\n        if (navigator.platform.indexOf(\"Win\") > -1) {\n          ps.destroy();\n        }\n      };\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  // const linkOnClick = () => { document.documentElement.classList.remove(\"nav-open\") };\n\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    props.setSidebarOpened(!props.sidebarOpened);\n  };\n\n  const { bgColor, logo } = props;\n  let logoImg = null;\n  let logoText = null;\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-mini\"\n          target=\"_blank\"\n          onClick={toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </a>\n      );\n      logoText = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-normal\"\n          target=\"_blank\"\n          onClick={toggleSidebar}\n        >\n          {logo.text}\n        </a>\n      );\n    } else {\n      logoImg = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-mini\"\n          onClick={toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </Link>\n      );\n      logoText = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-normal\"\n          onClick={toggleSidebar}\n        >\n          {logo.text}\n        </Link>\n      );\n    }\n  }\n\n  return (\n    <div className=\"sidebar\" data={bgColor}>\n      <div className=\"sidebar-wrapper\" ref={sidebar}>\n        {logoImg !== null || logoText !== null ? (\n          <div className=\"logo\">\n            {logoImg}\n            {logoText}\n          </div>\n        ) : null}\n        <Nav>\n          {routes.map((prop, key) => {\n            if (prop.redirect) return null;\n            return (\n              <li\n                className={\n                  activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\n                }\n                key={key}\n              >\n                <NavLink\n                  to={prop.layout + prop.path}\n                  className=\"nav-link\"\n                  activeClassName=\"active\"\n                  onClick={toggleSidebar}\n                >\n                  <i className={prop.icon} />\n                  <p>{prop.name}</p>\n                </NavLink>\n              </li>\n            );\n          })}\n        </Nav>\n      </div>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    bgColor: state.templateReducer.templateProps.bgColor,\n    logo: state.templateReducer.templateProps.logo,\n    sidebarOpened: state.templateReducer.templateProps.sidebarOpened,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSidebarOpened: (state) => dispatch(setSidebarOpened(state)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setBgColor } from \"../redux/Template/actions.js\";\n\nfunction FixedPlugin(props) {\n  const [classes, setClasses] = useState(\"dropdown show-dropdown\");\n\n  const handleClick = () => {\n    if (classes === \"dropdown show-dropdown\") {\n      setClasses(\"dropdown show-dropdown show\");\n    } else {\n      setClasses(\"dropdown show-dropdown\");\n    }\n  };\n\n  const activateMode = (mode) => {\n    switch (mode) {\n      case \"light\":\n        document.body.classList.add(\"white-content\");\n        break;\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  };\n\n  // mode by default\n  useEffect(() => {\n    activateMode(props.mode);\n  }, [props.mode]);\n\n\n  return (\n    <div className=\"fixed-plugin\">\n      <div className={classes}>\n        <div onClick={handleClick}>\n          <i className=\"fa fa-cog fa-2x\" />\n        </div>\n        <ul className=\"dropdown-menu show\">\n          <li className=\"header-title\">SIDEBAR BACKGROUND</li>\n          <li className=\"adjustments-line\">\n            <div className=\"badge-colors text-center\">\n              <span\n                className={\n                  props.bgColor === \"primary\"\n                    ? \"badge filter badge-primary active\"\n                    : \"badge filter badge-primary\"\n                }\n                data-color=\"primary\"\n                onClick={() => {\n                  props.setBgColor(\"primary\");\n                }}\n              />{\" \"}\n              <span\n                className={\n                  props.bgColor === \"blue\"\n                    ? \"badge filter badge-info active\"\n                    : \"badge filter badge-info\"\n                }\n                data-color=\"blue\"\n                onClick={() => {\n                  props.setBgColor(\"blue\");\n                }}\n              />{\" \"}\n              <span\n                className={\n                  props.bgColor === \"green\"\n                    ? \"badge filter badge-success active\"\n                    : \"badge filter badge-success\"\n                }\n                data-color=\"green\"\n                onClick={() => {\n                  props.setBgColor(\"green\");\n                }}\n              />{\" \"}\n            </div>\n          </li>\n          <li className=\"adjustments-line text-center color-change\">\n            <span className=\"color-label\">LIGHT MODE</span>{\" \"}\n            <span\n              className=\"badge light-badge mr-2\"\n              onClick={() => activateMode(\"light\")}\n            />{\" \"}\n            <span\n              className=\"badge dark-badge ml-2\"\n              onClick={() => activateMode(\"dark\")}\n            />{\" \"}\n            <span className=\"color-label\">DARK MODE</span>{\" \"}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    bgColor: state.templateReducer.templateProps.bgColor,\n    mode: state.templateReducer.templateProps.mode,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setBgColor: (color) => dispatch(setBgColor(color)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FixedPlugin);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { connect } from \"react-redux\";\nimport availableRoutes from \"routes.js\";\nimport { setSidebarOpened } from \"../redux/Template/actions.js\";\nimport { setNetworkStatus } from \"../redux/Template/actions.js\";\n\n// core components\nimport AdminNavbar from \"components/AdminNavbar.js\";\nimport Footer from \"components/Footer.js\";\nimport Sidebar from \"components/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin.js\";\n\nimport \"./Admin.css\";\n\nvar ps;\n\nfunction Admin(props) {\n  const [backgroundColor, setBackgroundColor] = useState(props.bgColor);\n  const mainPanel = useRef();\n  let history = useHistory();\n  const routes = availableRoutes();\n  props.setNetworkStatus(window.navigator.onLine);\n\n  useEffect(\n    () => {\n  \n      // Listeners for network status\n        window.addEventListener('online', () => props.setNetworkStatus(true))\n        window.addEventListener('offline', () => props.setNetworkStatus(false))  \n\n      // component mounted (ComponentDidMount)\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        document.documentElement.className += \" perfect-scrollbar-on\";\n        document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n        ps = new PerfectScrollbar(mainPanel, { suppressScrollX: true });\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      props.setSidebarOpened(\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n      );\n\n      // callback at unmount (ComponentWillUnmount)\n      return () => {\n        if (navigator.platform.indexOf(\"Win\") > -1) {\n          ps.destroy();\n          document.documentElement.className += \" perfect-scrollbar-off\";\n          document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n        }\n      };\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  useEffect(() => {\n    // component updated (ComponentDidUpdate)\n    if (history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      mainPanel.current.scrollTop = 0;\n    }\n    setBackgroundColor(props.bgColor);\n  }, [history.action, props.bgColor]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <Route component={Sidebar} />\n        <div className=\"main-panel\" ref={mainPanel} data={backgroundColor}>\n          <Route component={AdminNavbar} />\n\n          <Switch>\n            {getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/\" />\n          </Switch>\n          <Footer fluid />\n        </div>\n      </div>\n      <FixedPlugin />\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    bgColor: state.templateReducer.templateProps.bgColor,\n    sidebarOpened: state.templateReducer.templateProps.sidebarOpened,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSidebarOpened: (state) => dispatch(setSidebarOpened(state)),\n    setNetworkStatus: (state) => dispatch(setNetworkStatus(state)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\n","import { SET_CREDENTIALS } from \"../constants\";\n\nexport function setCredentials(payload) {\n  return { type: SET_CREDENTIALS, payload };\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, FormGroup } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport NotificationAlert from \"react-notification-alert\";\nimport { setCredentials } from \"../redux/Login/actions.js\";\nimport logo from \"../assets/img/logo.png\";\nimport \"./Login.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport ruta from \"../views/url\";\n\n// Configure Firebase.\nconst config = {\n  apiKey: \"AIzaSyCwDo3PWtcFx7y4lHac4p4DaRWfVEPc1JI\",\n  authDomain: \"fire-auth-hyperfoods.firebaseapp.com\",\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\n// User type const.\nexport const userType = \"client\"; // DO NOT MODIFY\n\nfunction LoginClients(props) {\n  window.sessionStorage.setItem(\"userType\", userType);\n  const notificationAlert = useRef();\n  let history = useHistory();\n\n  //Function to handle Login submit\n  const onSubmit = (values, { resetForm }) => {\n    // console.log(values);\n    axios\n      .post(\"http://\" + ruta + \"/api/users/client/login/\", values)\n      .then((res) => {\n        // console.log(\"res\", res.data);\n        if (res.status === 200) {\n          if (res.data.user.user.is_active) {\n            notify(\"br\", \"success\", \"Login successful\");\n            props.setCredentials(res.data);\n            setTimeout(() => {\n              history.push(\"/\");\n            }, 800);\n          } else notify(\"br\", \"danger\", \"Inactive user\");\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n        notify(\"br\", \"danger\", \"Incorrect user Id or password\");\n        setTimeout(() => {\n          resetForm({\n            email: \"\",\n            password: \"\",\n          });\n        }, 600);\n      });\n  };\n\n  //Schema for input data valiation using Yup\n  const formSchema = Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .matches(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        \"Must be a valid e-mail address\"\n      ),\n    password: Yup.string()\n      .required(\"Required field\")\n      .min(4, \"Minimum of 4 characters\"),\n  });\n\n  //Function for notification settings\n  const notify = (place, type, message) => {\n    notificationAlert.current.notificationAlert({\n      place: place,\n      type: type, //[\"primary\", \"success\", \"danger\", \"warning\", \"info\"]\n      message: <b>{message}</b>,\n      icon:\n        type === \"success\"\n          ? \"tim-icons icon-check-2\"\n          : \"tim-icons icon-alert-circle-exc\",\n      autoDismiss: 7,\n    });\n  };\n\n  // -- -- Social networks login with Firebase -- -- //\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  // Configure FirebaseUI.\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => false,\n    },\n  };\n\n  useEffect(\n    () => {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (!!user) {\n          console.table({\n            name: firebase.auth().currentUser.displayName,\n            emailVerified: firebase.auth().currentUser.emailVerified,\n            email: firebase.auth().currentUser.providerData[0].email,\n          });\n          firebase.auth().signOut();\n        }\n\n        setIsSignedIn(!!user);\n      });\n    },\n    // eslint-disable-next-line\n    []\n  );\n  // -- -- -- -- -- -- -- -- -- -- -- -- -- --  -- -- //\n\n  if (!isSignedIn) {\n    return (\n      <div className=\"login-background\">\n        <div className=\"react-notification-alert-container\">\n          <NotificationAlert ref={notificationAlert} />\n        </div>\n\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n          validationSchema={formSchema}\n          onSubmit={(values, { resetForm }) => onSubmit(values, { resetForm })}\n        >\n          <Form className=\"login-form shadow p-4 mb-0 rounded\">\n            <div className=\"text-center\">\n              <img className=\"login-logo\" alt=\"logo\" src={logo} />\n            </div>\n            <br />\n\n            <FormGroup>\n              &nbsp;\n              <i className=\"tim-icons icon-single-02\" />\n              &nbsp;&nbsp;\n              <label htmlFor=\"Id\">Email</label>\n              <Field\n                className=\"form-control\"\n                name=\"email\"\n                placeholder=\"type your email\"\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className=\"field-error text-danger\"\n              />\n            </FormGroup>\n            <FormGroup>\n              &nbsp;\n              <i className=\"tim-icons icon-key-25\" />\n              &nbsp;&nbsp;\n              <label htmlFor=\"Password\">Password</label>\n              <Field\n                className=\"form-control\"\n                name=\"password\"\n                placeholder=\"type your password\"\n                type=\"password\"\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className=\"field-error text-danger\"\n              />\n            </FormGroup>\n\n            <div className=\"text-center pt-2\">\n              <Button\n                type=\"submit\"\n                className=\"btn btn-dark btn-block\"\n                // onClick={onClickLogin}\n                onSubmit={() => {}}\n              >\n                Log in\n              </Button>\n            </div>\n            <div className=\"text-center pt-2\">\n              Or continue with your social account\n            </div>\n            {!isSignedIn && (\n              <StyledFirebaseAuth\n                uiConfig={uiConfig}\n                firebaseAuth={firebase.auth()}\n              />\n            )}\n            <div className=\"text-center\">\n              <a href=\"/\">Sign up</a>\n              <span className=\"p-2\">|</span>\n              <a href=\"/\">Forgot Password</a>\n            </div>\n          </Form>\n        </Formik>\n      </div>\n    );\n  }\n  return <></>;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCredentials: (credentials) => dispatch(setCredentials(credentials)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginClients);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, FormGroup } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport NotificationAlert from \"react-notification-alert\";\nimport { setCredentials } from \"../redux/Login/actions.js\";\nimport logo from \"../assets/img/logo.png\";\nimport \"./Login.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport ruta from \"../views/url\";\n\n// Configure Firebase.\nconst config = {\n  apiKey: \"AIzaSyCwDo3PWtcFx7y4lHac4p4DaRWfVEPc1JI\",\n  authDomain: \"fire-auth-hyperfoods.firebaseapp.com\",\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\n// User type const.\nexport const userType = \"worker\"; // DO NOT MODIFY\n\nfunction LoginWorkers(props) {\n  window.sessionStorage.setItem(\"userType\", userType);\n  const notificationAlert = useRef();\n  let history = useHistory();\n\n  //Function to handle Login submit\n  const onSubmit = (values, { resetForm }) => {\n    // console.log(values);\n    axios\n      .post(\"http://\" + ruta + \"/api/users/worker/login/\", values)\n      .then((res) => {\n        // console.log(\"res\", res.data);\n        if (res.status === 200) {\n          if (res.data.user.user.is_active) {\n            notify(\"br\", \"success\", \"Login successful\");\n            props.setCredentials(res.data);\n            setTimeout(() => {\n              history.push(\"/\");\n            }, 800);\n          } else notify(\"br\", \"danger\", \"Inactive user\");\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n        notify(\"br\", \"danger\", \"Incorrect user Id or password\");\n        setTimeout(() => {\n          resetForm({\n            email: \"\",\n            password: \"\",\n          });\n        }, 600);\n      });\n  };\n\n  //Schema for input data valiation using Yup\n  const formSchema = Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .matches(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        \"Must be a valid e-mail address\"\n      ),\n    password: Yup.string()\n      .required(\"Required field\")\n      .min(4, \"Minimum of 4 characters\"),\n  });\n\n  //Function for notification settings\n  const notify = (place, type, message) => {\n    notificationAlert.current.notificationAlert({\n      place: place,\n      type: type, //[\"primary\", \"success\", \"danger\", \"warning\", \"info\"]\n      message: <b>{message}</b>,\n      icon:\n        type === \"success\"\n          ? \"tim-icons icon-check-2\"\n          : \"tim-icons icon-alert-circle-exc\",\n      autoDismiss: 7,\n    });\n  };\n\n  // -- -- Social networks login with Firebase -- -- //\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  // Configure FirebaseUI.\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => false,\n    },\n  };\n\n  useEffect(\n    () => {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (!!user) {\n          console.table({\n            name: firebase.auth().currentUser.displayName,\n            emailVerified: firebase.auth().currentUser.emailVerified,\n            email: firebase.auth().currentUser.providerData[0].email,\n          });\n          firebase.auth().signOut();\n        }\n\n        setIsSignedIn(!!user);\n      });            \n    },\n    // eslint-disable-next-line\n    []\n  );\n  // -- -- -- -- -- -- -- -- -- -- -- -- -- --  -- -- //\n\n  if (!isSignedIn) {\n    return (\n      <div className=\"login-background\">\n        <div className=\"react-notification-alert-container\">\n          <NotificationAlert ref={notificationAlert} />\n        </div>\n\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n          validationSchema={formSchema}\n          onSubmit={(values, { resetForm }) => onSubmit(values, { resetForm })}\n        >\n          <Form className=\"login-form shadow p-4 mb-0 rounded\">\n            <div className=\"text-center\">\n              <img className=\"login-logo\" alt=\"logo\" src={logo} />\n            </div>\n            <br />\n\n            <FormGroup>\n              &nbsp;\n              <i className=\"tim-icons icon-badge\" />\n              &nbsp;&nbsp;\n              <label htmlFor=\"Id\">Employee Email</label>\n              <Field\n                className=\"form-control\"\n                name=\"email\"\n                placeholder=\"type your email\"\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className=\"field-error text-danger\"\n              />\n            </FormGroup>\n            <FormGroup>\n              &nbsp;\n              <i className=\"tim-icons icon-key-25\" />\n              &nbsp;&nbsp;\n              <label htmlFor=\"Password\">Password</label>\n              <Field\n                className=\"form-control\"\n                name=\"password\"\n                placeholder=\"type your password\"\n                type=\"password\"\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className=\"field-error text-danger\"\n              />\n            </FormGroup>\n\n            <div className=\"text-center pt-2\">\n              <Button\n                type=\"submit\"\n                className=\"btn btn-dark btn-block\"\n                // onClick={onClickLogin}\n                onSubmit={() => {}}\n              >\n                Log in\n              </Button>\n            </div>\n            <div className=\"text-center pt-2\">\n              Or continue with your social account\n            </div>\n            {!isSignedIn && (\n              <StyledFirebaseAuth\n                uiConfig={uiConfig}\n                firebaseAuth={firebase.auth()}\n              />\n            )}\n            <div className=\"text-center\">\n              <a href=\"/\">Sign up</a>\n              <span className=\"p-2\">|</span>\n              <a href=\"/\">Forgot Password</a>\n            </div>\n          </Form>\n        </Formik>\n      </div>\n    );\n  }\n  return <></>;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCredentials: (credentials) => dispatch(setCredentials(credentials)),    \n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginWorkers);\n","import React , { useState }from 'react'\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    Nav,\n    NavItem,\n    NavLink, Container\n  } from 'reactstrap';\n  import {\n    Card,Row,Col, CardText, CardBody,\n    CardTitle, CardSubtitle, CardFooter, Table, Button\n  } from 'reactstrap';\n  import { useHistory } from \"react-router-dom\";\n  import Footer from \"components/Footer.js\";\nimport logo from \"assets/img/simple-logo.png\";\nimport avatar from \"assets/img/anime3.png\"\nimport \"./Landing.css\"\n\nfunction LandingPage(){\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n    let history = useHistory();\n    \n\n  \n    return (\n   \n      <body data-spy=\"scroll\" data-target=\"#navbar-l\" data-offset=\"20\">\n         {//Barra de navegación\n         }\n        <section id=\"home\" >\n\n          <Navbar id=\"navbar-l\" className=\"navbar-l navbar-expand-lg navbar-dark \">\n            <Container>\n              <a className=\"navbar-brand-l\" href=\"/\">\n                <img src={logo} alt=\"logo\" />\n              </a>\n              <NavbarToggler onClick={toggle} />\n              <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"ml-auto\" navbar>\n                  <NavItem >\n                    <NavLink href=\"#home\">Home</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"#pricing\">Plans</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"#team\">Team</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"#m-pay\">Pays</NavLink>\n                  </NavItem>    \n                </Nav>        \n              </Collapse>\n            </Container>\n          </Navbar>\n\n          <div  className=\"landing\">\n            <div className=\"home-wrap\">\n              <div className=\"home-inner \">\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"caption text-center\" >\n            <h1>Welcome to Hyperfoods</h1>\n            <h3 class=\" lead px-5\">Foods sales management system\n              </h3>\n            \n          </div>\n          <div className=\"onda\">\n              <svg viewBox=\"0 0 500 150\" preserveAspectRatio=\"none\" className=\"ondaa\">\n                <path d=\"M0.00,49.98 C149.99,150.00 349.20,-49.98 500.00,49.98 L500.00,150.00 L0.00,150.00 Z\" className=\"ondaaa\">\n                </path>\n               </svg>\n          </div>\n        </section>\n        \n\n        <section id=\"pricing\" className=\"pricing offsset py-3 \">\n          <h1 className=\"tex-center\">Our planes</h1>\n          <Container>\n\n             <Row>\n                <Col className=\"col-12 col-lg-4\">\n                 <Card>\n                    <CardBody>\n                      <div className=\"d-flex mb-3 text-primary\">\n                        <span className=\"h5 mb-0\">$</span>\n                        <CardTitle className=\"price display-2 mb-0 price1\" data-annual=\"199\" data-monthly=\"99\">\n                          100</CardTitle>\n                        \n                        <CardSubtitle className=\"h6 font-weight-normal align-self-end\">/month</CardSubtitle>\n                      </div>\n                      <h4 className=\"mb-3 text-black\">Plan Basic</h4>\n                      <CardSubtitle>                          \n                         more basic functionalities and zero level of customization\n                        </CardSubtitle> \n                   </CardBody>\n                 \n                   <CardBody>\n                   <Table  responsive>\n                        <div className=\"features\">\n                          <tbody>\n                            <tr>\n                              <td ><span className=\"check\"><i className=\" far fa-check-circle\"></i></span> User management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Client management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Products management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Sales management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Reports(text)</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> Graphic reports</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> Customization</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> Menu update(Excel)</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> Client location</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> System monitoring</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> PWA</td>\n                            </tr>\n                          </tbody>\n                        </div>\n                      </Table>\n                      <CardFooter className=\"text-center\">\n         \n                         <Button className=\"btn-fill \"  onClick={() => history.push(\"/request/basic\")} color=\"success\" type=\"submit\">\n                          Get <i className=\"p-2 fas fa-arrow-right\"></i>\n                         </Button>\n                     \n                      </CardFooter>\n                   </CardBody>\n                  </Card>\n                </Col>\n                <Col className=\"col-12 col-lg-4\">\n                <Card>\n                    <CardBody>\n                      <div className=\"d-flex mb-3 text-primary\">\n                        <span className=\"h5 mb-0\">$</span>\n                        <CardTitle className=\"price display-2 mb-0 price1\" data-annual=\"199\" data-monthly=\"99\">\n                          150</CardTitle>\n                        \n                        <CardSubtitle className=\"h6 font-weight-normal align-self-end\">/month</CardSubtitle>\n                      </div>\n                      <h4 className=\"mb-3 text-black\">Plan Medium</h4>\n                      <CardSubtitle>\n                          Additional functionalities (reports and intermediate level of Customization).\n                      </CardSubtitle> \n                   </CardBody>\n                 \n                   <CardBody>\n                   <Table  responsive>\n                        <div className=\"features\">\n                          <tbody>\n                            <tr>\n                              <td ><span className=\"check\"><i className=\" far fa-check-circle\"></i></span> User management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Client management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Products management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Sales management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Reports(text)</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Graphic reports</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Customization</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> Menu update(Excel)</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> Client location</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> System monitoring</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"cancel\"><i className=\"fas fa-times\"></i></span> PWA</td>\n                            </tr>\n                          </tbody>\n                        </div>\n                      </Table>\n                      <CardFooter  className=\"text-center\">\n                         <Button className=\"btn-fill\" onClick={() => history.push(\"/request/medium\")} color=\"success\" type=\"submit\">\n                          Get <i className=\"p-2 fas fa-arrow-right\"></i>\n                         </Button>\n                      </CardFooter>\n                   </CardBody>\n                  </Card>\n                </Col>\n                <Col className=\"col-12 col-lg-4\">\n                  <Card>\n                    <CardBody>\n                      <div className=\"d-flex mb-3 text-primary\">\n                        <span className=\"h5 mb-0\">$</span>\n                        <CardTitle className=\"price display-2 mb-0 price1\" data-annual=\"199\" data-monthly=\"99\">\n                          200</CardTitle>\n                        \n                        <CardSubtitle className=\"h6 font-weight-normal align-self-end\">/month</CardSubtitle>\n                      </div>\n                      <h4 className=\"mb-3 text-black\">Plan Full</h4>\n                      <CardSubtitle>   \n                          Additional features plus basic and intermediate functionalities\n                        </CardSubtitle> \n                   </CardBody>\n                 \n                   <CardBody>\n                   <Table  responsive>\n                        <div className=\"features\">\n                          <tbody>\n                            <tr>\n                              <td ><span className=\"check\"><i className=\" far fa-check-circle\"></i></span> User management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Client management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Products management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Sales management</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Reports(text)</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Graphic reports</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Customization</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Menu update(Excel)</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> Client location</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> System monitoring</td>\n                            </tr>\n                            <tr>\n                            <td><span className=\"check\"><i className=\"far fa-check-circle\"></i></span> PWA</td>\n                            </tr>\n                          </tbody>\n                        </div>\n                      </Table>\n                      <CardFooter  className=\"text-center\">\n                         <Button className=\"btn-fill\" onClick={() => history.push(\"/request/full\")} color=\"success\" type=\"submit\">\n                          Get <i className=\"p-2 fas fa-arrow-right\"></i>\n                         </Button>\n                      </CardFooter>\n                   </CardBody>\n                  </Card>\n                </Col>\n             </Row>\n          </Container>\n       \n        </section>\n        <div className=\"onda-pricing-team\">\n              <svg viewBox=\"0 0 500 150\" preserveAspectRatio=\"none\" className=\"ondaa-pricing-team\">\n                <path d=\"M0.00,49.98 C193.28,128.78 292.61,-24.17 500.00,49.98 L500.00,0.00 L0.00,0.00 Z\" className=\"ondaaa-pricing-team\">\n                </path>\n              </svg>\n          </div>\n        <div className=\"onda-team\">\n              <svg viewBox=\"0 0 500 150\" preserveAspectRatio=\"none\" className=\"ondaa-team\">\n                <path d=\"M0.00,49.98 C149.99,150.00 349.20,-49.98 500.00,49.98 L500.00,150.00 L0.00,150.00 Z\" className=\"ondaaa-team\">\n                </path>\n              </svg>\n          </div>\n          \n        <section id=\"team\" className=\"team offsset text-center\">\n          <Container className=\" p-5\">\n          <h1 className=\"text-white\">Team Development</h1>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer ultrices nisi libero, sed dignissim leo.</p>\n            <Row className=\"py-4\">\n              <Col className=\"col-12 col-lg-3\">\n                <Card>\n                  <CardBody>\n                    <CardTitle className=\"text-black\">Cristian Vallecilla</CardTitle>\n                    <CardSubtitle>Desarrollador frontend</CardSubtitle>\n                  </CardBody>\n                  <img width=\"50%\" src={avatar} alt=\"avatar\" className=\"img-fluid rounded-circle\"/>\n                  <CardBody>\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n                    <div className=\"d-flex flex-row justify-content-center\">\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-facebook\"></i>\n                        </div>\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-github\"></i>\n                      </div>\n                      <div className=\"p-2\">\n                        <i className=\"fab fa-discord\"></i>\n                      </div>\n                    </div>\n                  </CardBody>\n\n                </Card>\n              </Col>\n              <Col className=\"col-12 col-lg-3\">\n                <Card>\n                  <CardBody>\n                    <CardTitle className=\"text-black\">Jem Pool Suarez</CardTitle>\n                    <CardSubtitle>Desarrollador frontend</CardSubtitle>\n                  </CardBody>\n                  <img width=\"50%\" src={avatar} alt=\"avatar\" className=\"img-fluid rounded-circle\"/>\n                  <CardBody>\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n                    <div className=\"d-flex flex-row justify-content-center\">\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-facebook\"></i>\n                        </div>\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-github\"></i>\n                      </div>\n                      <div className=\"p-2\">\n                        <i className=\"fab fa-discord\"></i>\n                      </div>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col className=\"col-12 col-lg-3\">\n                <Card>\n                  <CardBody>\n                    <CardTitle  className=\"text-black\">Esneider Manzano</CardTitle>\n                    <CardSubtitle>Desarrollador backend</CardSubtitle>\n                  </CardBody>\n                  <img width=\"50%\" src={avatar} alt=\"avatar\" className=\"img-fluid rounded-circle\"/>\n                  <CardBody>\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n                    <div className=\"d-flex flex-row justify-content-center\">\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-facebook\"></i>\n                        </div>\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-github\"></i>\n                      </div>\n                      <div className=\"p-2\">\n                        <i className=\"fab fa-discord\"></i>\n                      </div>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col className=\"col-12 col-lg-3\">\n                <Card>\n                  <CardBody>\n                    <CardTitle className=\"text-black\">Christian Taborda</CardTitle>\n                    <CardSubtitle>Desarrollador backend</CardSubtitle>\n                  </CardBody>\n                  <img width=\"50%\" src={avatar} alt=\"avatar\" className=\"img-fluid rounded-circle\"/>\n                  <CardBody>\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n                    <div className=\"d-flex flex-row justify-content-center\">\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-facebook\"></i>\n                        </div>\n                      <div className=\"p-2\">\n                      <i className=\"fab fa-github\"></i>\n                      </div>\n                      <div className=\"p-2\">\n                        <i className=\"fab fa-discord\"></i>\n                      </div>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n            </Container>\n        </section>\n        <div className=\"onda-footer\">\n              <svg viewBox=\"0 0 500 150\" preserveAspectRatio=\"none\" className=\"ondaa-footer\">\n                <path d=\"M0.00,49.98 C149.99,150.00 349.20,-49.98 500.00,49.98 L500.00,150.00 L0.00,150.00 Z\" className=\"ondaaa-footer\">\n                </path>\n              </svg>\n          </div>\n        <section id=\"m-pay\" className=\"pay offsset py-2\">\n          <div className=\"container\">\n             <div className=\"row justify-content-center\"> \n                 <div className=\"col-12\">\n                    <h3 className=\"mb-4 text-center\">We accept the following payment methods</h3>\n                  </div>\n                  <div className=\"d-flex flex-row justify-content-center\">\n                    <div className=\"p-2\">\n                       <i className=\" tamano fab fa-cc-visa\" ></i>\n                    </div>\n                  <div className=\"p-2\">\n                     <i className=\"tamano fab fa-bitcoin\"></i>\n                  </div>\n                  <div className=\"p-2\">\n                    <i className=\" tamano fab fa-cc-mastercard\"></i>\n                  </div>\n                  <div className=\"p-2\"> \n                    <i className=\"tamano fab fa-cc-stripe\"></i>\n                  </div>\n                  <div className=\"p-2\">  \n                    <i className=\" tamano  fab fa-cc-amazon-pay\"></i>\n                  </div>     \n                  <div className=\"p-2\">  \n                    <i className=\"tamano fab fa-cc-paypal\"></i>\n                  </div>\n                        \n                </div>\n                          <div className=\"col-12 text-center py-3\">\n                              <a href=\"./contact.html\"><strong>Chat with us</strong></a><span class=\"border-right border-gray mx-2\"></span>Send us an email to <a href=\"mailto:support@yourcompany.com\"><strong>support@yourcompany.com</strong></a>\n                          </div>\n                      </div> \n                  </div>   \n\n        </section>\n        <Footer fluid />\n      \n        \n            \n      </body>\n\n    );\n    \n    \n\n\n};\n\nexport default LandingPage;","import React , { useState }from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport Footer from \"components/Footer.js\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport axios from \"axios\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Container,\n  Card,\n  Row,\n  Col,\n  CardBody,\n  CardFooter,\n  FormGroup,\n  Button,\n  UncontrolledAlert,\n  Alert,\n  Input,\n} from \"reactstrap\";\nimport logo from \"assets/img/simple-logo.png\";\nimport \"./Suscription.css\";\n\nfunction Suscription(props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSend, setSend] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  let history = useHistory();\n  /*\n    const [empresa, setEmpresa] = useState(\"\");\n    const [correo, setCorreo] = useState(\"\")\n    const [nombre, setNombre]= useState(\"\")\n    const [ciudad, setCiudad]= useState(\"\")\n    const [direccion, setDireccion]= useState(\"\")*/\n\n  const [initialValues, setInitialValues] = useState({\n    Company: \"\",\n    Name: \"\",\n    City: \"\",\n    Email: \"\",\n    Address: \"\",\n  });\n\n  const onSubmit = (values, { resetForm }) => {\n    let mensaje = values;\n    mensaje.Plan = props.match.params.id;\n    console.log(JSON.stringify(mensaje));\n    setSend(true);\n    setTimeout(() => {\n      resetForm(initialValues);\n    }, 600);\n    axios\n      .post(\"http://hyperfoods.team/api/categories/sendEmail/\", mensaje)\n      .then((res) => {\n        console.log(\"%c response \", \"background: #222; color: #bada55\");\n        console.table(res.data);\n      })\n      .catch((err) => console.log(err));\n    //    setTimeout(() => {  history.push(\"/\"); }, 800);\n\n    //history.push(\"/\");\n  };\n  //Schema for Field data valiation using Yup\n  const formSchema = Yup.object().shape({\n    Company: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n    Name: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n\n    Email: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .matches(\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        \"Must be a valid e-mail address\"\n      ),\n    City: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(2, \"Minimum of 2 characters\")\n      .matches(\n        /^[a-z ,.'-]+$/i,\n        \"Must contain only letters and these symbols , . '   - \"\n      ),\n\n    Address: Yup.string()\n      .trim()\n      .required(\"Required field\")\n      .min(7, \"Minimum of 7 characters\")\n      .matches(\n        /[\\w\\[\\]`#\\^(),.'-]/g,\n        \"Must contain only letters, numbers and these symbols #  ^ ( ) , . ' -\"\n      ),\n  });\n  const mostrarAlerta = () => {\n    if (isSend) {\n      return (\n        <UncontrolledAlert color=\"success\">\n          <span>\n            <b>Sent successfully-</b>\n            We will get in touch with you in the shortest time possible\n          </span>\n        </UncontrolledAlert>\n      );\n    }\n  };\n\n  return (\n    <body data-spy=\"scroll\" data-target=\"#navbar-l\" data-offset=\"20\">\n      {\n        //Barra de navegación\n        console.log(props.match.params.id)\n      }\n      <section id=\"home\">\n        <Navbar\n          id=\"navbar-l\"\n          className=\"navbar-l navbar-expand-lg navbar-dark \"\n        >\n          <Container>\n            <a className=\"navbar-brand-l\" href=\"/\">\n              <img src={logo} alt=\"logo\" />\n            </a>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink onClick={() => history.push(\"/landing\")}>\n                    Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"#pricing\">Plans</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"#team\">Team</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"#m-pay\">Pays</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n\n        <div className=\"landing\">\n          <div className=\"home-wrap\">\n            <div className=\"home-inner \"></div>\n          </div>\n        </div>\n\n        <div className=\"caption text-center\">\n          <h1>Suscription to Hyperfoods</h1>\n          <h3 className=\" lead px-5\">Foods sales management system</h3>\n        </div>\n        <div className=\"onda-s\">\n          <svg\n            viewBox=\"0 0 500 150\"\n            preserveAspectRatio=\"none\"\n            className=\"ondaa-s\"\n          >\n            <path\n              d=\"M0.00,49.98 C149.99,150.00 349.20,-49.98 500.00,49.98 L500.00,150.00 L0.00,150.00 Z\"\n              className=\"ondaaa-s\"\n            ></path>\n          </svg>\n        </div>\n      </section>\n      <section className=\"campos py-5\">\n        <h2 className=\"title\">Plan {props.match.params.id}</h2>\n        <Container className=\"d-flex justify-content-center align-items-center\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={formSchema}\n            onSubmit={(values, { resetForm }) =>\n              onSubmit(values, { resetForm })\n            }\n          >\n            <Form>\n              <Card className=\"card-campos\">\n                <CardBody>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label htmlFor=\"Company\">Company</label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"Company\"\n                          placeholder=\"type your company name\"\n                        />\n                        <ErrorMessage\n                          name=\"Company\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label htmlFor=\"Name\">Name</label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"Name\"\n                          placeholder=\"type your full name\"\n                        />\n                        <ErrorMessage\n                          name=\"Name\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label htmlFor=\"Email\">Email address</label>\n\n                        <Field\n                          className=\"form-control\"\n                          name=\"Email\"\n                          placeholder=\"type your email address\"\n                        />\n                        <ErrorMessage\n                          name=\"Email\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label htmlFor=\"City\">City</label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"City\"\n                          placeholder=\"type your company city\"\n                        />\n                        <ErrorMessage\n                          name=\"City\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <label htmlFor=\"Email\">Address</label>\n                        <Field\n                          className=\"form-control\"\n                          name=\"Address\"\n                          placeholder=\"type your address\"\n                        />\n                        <ErrorMessage\n                          name=\"Address\"\n                          component=\"div\"\n                          className=\"field-error text-danger\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n                <CardFooter className=\"text-center\">\n                  <Button\n                    className=\"btn-fill\"\n                    color=\"primary\"\n                    color=\"success\"\n                    type=\"submit\"\n                  >\n                    Send\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Form>\n          </Formik>\n        </Container>\n        {mostrarAlerta()}\n      </section>\n      <div className=\"onda-footer-s\">\n        <svg\n          viewBox=\"0 0 500 150\"\n          preserveAspectRatio=\"none\"\n          className=\"ondaa-footer-s\"\n        >\n          <path\n            d=\"M0.00,49.98 C149.99,150.00 349.20,-49.98 500.00,49.98 L500.00,150.00 L0.00,150.00 Z\"\n            className=\"ondaaa-footer-s\"\n          ></path>\n        </svg>\n      </div>\n      <section id=\"m-pay\" className=\"pay offsset py-2\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-12\">\n              <h3 className=\"mb-4 text-center\">\n                We accept the following payment methods\n              </h3>\n            </div>\n            <div className=\"d-flex flex-row justify-content-center\">\n              <div className=\"p-2\">\n                <i className=\" tamano fab fa-cc-visa\"></i>\n              </div>\n              <div className=\"p-2\">\n                <i className=\"tamano fab fa-bitcoin\"></i>\n              </div>\n              <div className=\"p-2\">\n                <i className=\" tamano fab fa-cc-mastercard\"></i>\n              </div>\n              <div className=\"p-2\">\n                <i className=\"tamano fab fa-cc-stripe\"></i>\n              </div>\n              <div className=\"p-2\">\n                <i className=\" tamano  fab fa-cc-amazon-pay\"></i>\n              </div>\n              <div className=\"p-2\">\n                <i className=\"tamano fab fa-cc-paypal\"></i>\n              </div>\n            </div>\n            <div className=\"col-12 text-center py-3\">\n              <a href=\"./contact.html\">\n                <strong>Chat with us</strong>\n              </a>\n              <span className=\"border-right border-gray mx-2\"></span>Send us an\n              email to{\" \"}\n              <a href=\"mailto:support@yourcompany.com\">\n                <strong>support@yourcompany.com</strong>\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Footer fluid />\n    </body>\n  );\n}\n\nexport default Suscription;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Admin from \"layouts/Admin.js\";\nimport LoginClients from \"layouts/LoginClients.js\";\nimport LoginWorkers from \"layouts/LoginWorkers.js\";\nimport LandingPage from \"layouts/LandingPage.js\";\nimport Suscription from \"layouts/Suscription.js\";\n\n// import Sale from \"layouts/Sale.js\"\nimport RedirectRoutes from \"./RedirectRoutes.js\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/css/nucleo-icons.css\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/request/:id\" component={Suscription} />\n        <Route path=\"/landing\" component={LandingPage} />\n        <Route path=\"/admin\" component={Admin} />\n        {/* <Route path=\"/Sale\" component={Sale} /> */}\n\n        {/* <Route exact path=\"/login-admin\" component={LoginAdmin} /> */}\n        <Route exact path=\"/login-workers\" component={LoginWorkers} />\n        <Route exact path=\"/login-clients\" component={LoginClients} />\n        <Route path=\"/\" component={RedirectRoutes} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n// serviceWorker.unregister();\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default function RedirectRoutes() {\n  // console.log(window.sessionStorage.getItem(\"userType\"));\n\n  if (window.sessionStorage.getItem(\"userType\") === null) {\n    return <Redirect from=\"/\" to=\"/landing\" />;\n  }\n\n  if (window.sessionStorage.getItem(\"userType\") === \"client\") {\n    return <Redirect from=\"/\" to=\"/admin/sales\" />;\n  }\n\n  if (window.sessionStorage.getItem(\"userType\") === \"worker\") {\n    return <Redirect from=\"/\" to=\"/admin/list-workers\" />;\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/simple-logo.b680ab5b.png\";","module.exports = __webpack_public_path__ + \"static/media/anime3.bd6820f1.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.168b729f.png\";"],"sourceRoot":""}